var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/controllers/AppController.html",[0,1.283,1,2.053]],["body/controllers/AppController.html",[0,1.91,1,3.056,2,1.466,3,0.351,4,0.304,5,0.304,6,3.038,7,0.56,8,1.617,9,4.664,10,4.664,11,1.91,12,0.032,13,1.063,14,3.639,15,1.617,16,2.251,17,4.741,18,3.639,19,0.587,20,0.747,21,2.772,22,3.038,23,0.351,24,0.018,25,1.913,26,3.038,27,1.756,28,3.639,29,3.639,30,0.023,31,0.023]],["title/modules/AppModule.html",[32,1.086,33,2.053]],["body/modules/AppModule.html",[1,2.985,2,1.609,3,0.272,4,0.236,5,0.236,12,0.032,19,0.729,20,0.58,21,2.896,22,2.36,23,0.272,24,0.014,30,0.02,31,0.02,32,1.579,33,3.984,34,1.241,35,1.241,36,1.486,37,1.486,38,1.241,39,2.434,40,1.486,41,2.36,42,2.36,43,2.36,44,3.194,45,2.418,46,3.194,47,3.194,48,2.1,49,1.486,50,1.486,51,2.828,52,2.575,53,2.828,54,2.828,55,2.828,56,2.828,57,2.828,58,2.36,59,2.36,60,2.36,61,2.36,62,2.828,63,2.828,64,2.828,65,2.828,66,2.828]],["title/injectables/AppService.html",[21,1.674,67,0.779]],["body/injectables/AppService.html",[3,0.372,4,0.322,5,0.322,7,0.594,8,1.679,9,4.767,10,4.767,12,0.032,13,1.104,15,1.679,16,2.301,19,0.478,20,0.792,21,2.587,23,0.372,24,0.019,27,1.824,30,0.024,31,0.024,61,3.22,67,1.203,68,1.693,69,3.22,70,3.857,71,3.857,72,3.857,73,3.857,74,3.857,75,2.8]],["title/controllers/AuthController.html",[0,1.283,76,2.053]],["body/controllers/AuthController.html",[0,0.876,2,0.876,3,0.209,4,0.181,5,0.398,7,0.335,8,1.124,11,1.788,12,0.032,13,0.995,15,1.514,19,0.646,20,0.446,23,0.209,24,0.011,25,1.143,27,1.644,30,0.016,31,0.016,76,2.124,77,1.815,78,1.578,79,2.174,80,2.535,81,2.75,82,2.75,83,2.75,84,2.75,85,2.174,86,3.978,87,2.174,88,2.174,89,1.788,90,1.644,91,0.816,92,1.514,93,4.19,94,2.128,95,1.815,96,2.573,97,2.174,98,2.174,99,2.861,100,2.174,101,2.174,102,2.174,103,1.815,104,2.573,105,2.174,106,2.174,107,1.26,108,1.26,109,1.26,110,1.578,111,1.578,112,3.295,113,1.815,114,2.174,115,1.815,116,1.815,117,2.091,118,1.815,119,1.815,120,1.815,121,1.26,122,2.174,123,2.174,124,1.815,125,1.815,126,3.295,127,2.174,128,2.174,129,2.75,130,2.174,131,2.174,132,2.128,133,2.174,134,2.174,135,2.174,136,2.174,137,2.75,138,2.174,139,2.174,140,2.174,141,2.174,142,2.174,143,2.174,144,2.174,145,2.174,146,2.174,147,2.174,148,2.174,149,2.174,150,2.174,151,2.174,152,2.174,153,2.174]],["title/injectables/AuthGuard.html",[67,0.779,121,1.846]],["body/injectables/AuthGuard.html",[3,0.324,4,0.28,5,0.28,7,0.518,8,1.534,12,0.032,13,1.009,15,1.534,19,0.557,20,0.69,23,0.324,24,0.017,27,1.667,30,0.022,31,0.022,67,1.1,68,1.475,89,1.812,90,1.667,91,0.69,92,1.534,121,2.939,154,2.806,155,2.9,156,4.499,157,4.499,158,4.499,159,4.499,160,5.415,161,3.361,162,3.361,163,4.499,164,4.098,165,3.361,166,5.071,167,4.499,168,3.361,169,2.167,170,3.361,171,2.806,172,2.44]],["title/modules/AuthModule.html",[32,1.086,44,1.846]],["body/modules/AuthModule.html",[2,1.653,3,0.283,4,0.245,5,0.245,12,0.032,19,0.724,20,0.603,23,0.283,24,0.015,30,0.02,31,0.02,32,1.612,34,1.289,35,1.289,36,1.544,37,1.544,38,1.289,39,2.485,40,1.544,44,3.484,45,2.448,48,2.156,49,1.544,50,1.544,52,2.644,76,3.047,117,2.932,118,2.451,164,2.132,169,1.893,173,2.451,174,2.937,175,2.451,176,3.233,177,2.937,178,2.937,179,2.132,180,2.937,181,2.937,182,2.451,183,1.702,184,2.132,185,2.937,186,2.937,187,2.937,188,1.893,189,2.937,190,2.937,191,2.451,192,2.937,193,2.132,194,2.132,195,2.937,196,2.451,197,2.451]],["title/injectables/AuthService.html",[67,0.779,117,1.674]],["body/injectables/AuthService.html",[3,0.135,4,0.117,5,0.117,7,0.216,8,0.794,12,0.033,13,0.93,15,1.625,19,0.544,20,0.288,23,0.135,24,0.007,25,0.738,27,1.425,30,0.011,31,0.011,67,0.569,68,0.616,80,2.26,81,4.101,82,3.21,83,1.943,84,3.21,89,1.67,90,1.702,91,0.851,92,1.414,94,1.663,95,1.943,96,2.011,99,3.072,103,1.943,104,2.011,117,1.224,119,1.172,120,1.172,132,2.202,164,3.335,171,2.895,172,3.009,183,0.814,184,1.019,188,1.501,193,1.019,194,1.019,196,1.172,197,1.172,198,1.172,199,2.328,200,2.328,201,0.905,202,1.019,203,1.397,204,4.39,205,1.404,206,1.69,207,2.328,208,1.404,209,2.328,210,2.328,211,1.943,212,1.404,213,2.328,214,2.179,215,1.404,216,2.328,217,4.39,218,1.404,219,2.328,220,1.404,221,2.982,222,1.404,223,1.404,224,1.404,225,0.905,226,1.404,227,1.404,228,1.172,229,1.172,230,3.009,231,1.404,232,3.187,233,2.328,234,3.469,235,2.011,236,2.328,237,2.328,238,1.404,239,1.404,240,1.404,241,1.404,242,1.019,243,1.404,244,1.404,245,1.404,246,0.905,247,2.328,248,1.404,249,2.895,250,2.895,251,2.489,252,2.328,253,3.469,254,1.404,255,1.404,256,2.328,257,1.404,258,1.404,259,1.404,260,1.404,261,1.404,262,2.328,263,1.404,264,1.404,265,1.404,266,1.404,267,1.404,268,1.404,269,1.728,270,1.404,271,3.469,272,0.905,273,1.404,274,1.172,275,1.404,276,1.404,277,1.404]],["title/classes/CreateSchoolDto.html",[24,0.016,278,1.674]],["body/classes/CreateSchoolDto.html",[3,0.314,4,0.272,5,0.272,7,0.502,11,2.154,12,0.031,13,1.199,16,2.411,19,0.404,23,0.314,24,0.022,30,0.022,31,0.022,91,1.097,92,1.963,235,2.893,278,2.315,279,1.429,280,4.662,281,2.364,282,1.933,283,4.99,284,4.99,285,4.99,286,3.676,287,3.257,288,3.257,289,3.257,290,3.257,291,2.719,292,3.257,293,3.676,294,2.839,295,4.463,296,3.237,297,1.712]],["title/classes/CreateTaskDto.html",[24,0.016,298,1.846]],["body/classes/CreateTaskDto.html",[3,0.354,4,0.306,5,0.306,7,0.565,11,1.921,12,0.031,13,1.187,16,2.258,19,0.455,23,0.354,24,0.024,30,0.024,31,0.024,91,1.087,214,2.506,279,1.611,282,2.092,291,3.064,294,3.413,296,3.07,297,1.93,298,2.764,299,4.679,300,2.665,301,3.844,302,3.413,303,3.413,304,3.671,305,3.064,306,3.671,307,3.671]],["title/injectables/JwtStrategy.html",[67,0.779,176,1.846]],["body/injectables/JwtStrategy.html",[3,0.321,4,0.278,5,0.278,7,0.514,8,1.526,12,0.032,13,1.003,15,1.137,19,0.669,20,0.684,23,0.321,24,0.016,27,1.235,30,0.022,31,0.022,67,1.094,68,1.463,80,2.216,89,1.343,90,1.235,91,0.684,92,1.137,94,1.598,155,2.884,169,2.149,176,2.594,183,1.933,184,2.421,188,3.256,191,2.784,194,2.421,201,3.256,211,2.784,235,1.933,269,1.933,308,2.784,309,4.475,310,4.475,311,3.335,312,4.475,313,3.335,314,3.335,315,3.335,316,3.335,317,2.784,318,3.335,319,3.335,320,3.335,321,3.335,322,3.335,323,3.335,324,3.335,325,2.784,326,3.335]],["title/classes/LoginDTO.html",[24,0.016,96,1.846]],["body/classes/LoginDTO.html",[3,0.367,4,0.317,5,0.317,7,0.586,11,1.966,12,0.031,13,1.094,16,2.289,19,0.471,23,0.367,24,0.024,30,0.024,31,0.024,91,1.001,96,2.828,235,3.122,242,3.91,279,1.67,282,2.141,293,4.073,294,3.472,296,2.828,297,2,327,3.176,328,3.804,329,3.804,330,3.176,331,3.804,332,3.176,333,3.176,334,3.176,335,3.176]],["title/modules/PrismaModule.html",[32,1.086,45,1.398]],["body/modules/PrismaModule.html",[3,0.352,4,0.305,5,0.305,12,0.031,19,0.589,20,0.75,23,0.352,24,0.018,30,0.023,31,0.023,32,1.802,34,1.604,35,1.604,36,1.921,37,1.921,38,1.604,39,2.778,40,2.778,45,2.657,48,2.499,49,1.921,50,1.921,107,2.119,108,2.119,109,2.119,203,2.556,336,3.051,337,3.051,338,3.051,339,3.655,340,3.655]],["title/injectables/PrismaService.html",[67,0.779,203,1.283]],["body/injectables/PrismaService.html",[3,0.331,4,0.286,5,0.286,7,0.528,8,1.555,12,0.032,13,1.023,15,1.555,19,0.565,20,0.704,23,0.331,24,0.017,30,0.023,31,0.023,67,1.115,68,1.505,80,2.617,89,1.382,90,1.271,91,0.704,92,1.17,132,2.186,155,2.939,203,1.837,341,2.863,342,5.123,343,4.56,344,5.843,345,4.56,346,5.459,347,3.43,348,2.863,349,3.43,350,2.863,351,3.43,352,3.43,353,3.43,354,3.43]],["title/classes/RegisterDTO.html",[24,0.016,104,1.846]],["body/classes/RegisterDTO.html",[3,0.346,4,0.3,5,0.3,7,0.553,11,2.111,12,0.031,13,1.175,16,2.385,19,0.445,23,0.346,24,0.023,30,0.023,31,0.023,90,1.941,91,1.075,104,2.725,235,3.038,242,3.804,279,1.576,282,2.063,294,3.583,296,3.222,297,1.888,305,3.924,330,2.999,332,2.999,333,2.999,334,2.999,335,2.999,355,2.999,356,3.592,357,3.592,358,3.592]],["title/classes/School.html",[24,0.016,359,2.053]],["body/classes/School.html",[3,0.458,4,0.397,5,0.397,12,0.029,23,0.458,24,0.023,30,0.028,31,0.028,279,2.087,359,3.608,360,3.97]],["title/controllers/SchoolController.html",[0,1.283,361,2.053]],["body/controllers/SchoolController.html",[0,0.911,2,0.911,3,0.218,4,0.189,5,0.189,7,0.348,8,1.158,11,1.955,12,0.032,13,1.088,15,1.655,16,2.24,19,0.561,20,0.464,23,0.218,24,0.011,25,1.189,26,1.888,27,1.798,30,0.017,31,0.017,78,1.642,80,2.632,89,1.824,90,1.678,91,0.929,92,1.545,94,2.326,107,1.311,108,1.311,109,1.311,110,2.464,111,2.958,132,1.953,230,1.642,246,2.188,269,2.954,278,2.679,359,1.458,361,2.188,362,1.888,363,3.78,364,2.834,365,2.834,366,2.834,367,1.888,368,2.262,369,2.262,370,1.888,371,3.395,372,2.262,373,1.888,374,3.395,375,2.262,376,1.888,377,3.152,378,3.395,379,2.262,380,1.888,381,1.888,382,2.142,383,1.888,384,1.458,385,2.464,386,1.458,387,2.262,388,2.262,389,2.262,390,2.262,391,2.262,392,2.262,393,2.262,394,2.262,395,2.262,396,2.262]],["title/modules/SchoolModule.html",[32,1.086,46,1.846]],["body/modules/SchoolModule.html",[2,1.837,3,0.331,4,0.286,5,0.286,12,0.032,19,0.676,20,0.704,23,0.331,24,0.017,30,0.023,31,0.023,32,1.747,34,1.505,35,1.505,36,1.803,37,1.803,38,1.505,39,2.693,40,1.803,45,2.564,46,3.511,48,2.397,49,1.803,50,1.803,52,2.939,107,1.988,108,1.988,109,1.988,179,2.49,361,3.302,382,3.071,383,2.863,397,2.863,398,3.43,399,2.863,400,3.43,401,3.43]],["title/injectables/SchoolService.html",[67,0.779,382,1.674]],["body/injectables/SchoolService.html",[3,0.22,4,0.19,5,0.19,7,0.351,8,1.165,12,0.032,13,1.146,15,1.661,19,0.563,20,0.468,23,0.22,24,0.011,25,1.199,27,1.804,30,0.017,31,0.017,67,0.835,68,1.001,80,2.636,89,1.962,90,1.804,91,0.999,92,1.661,94,2.334,99,2.202,132,2.334,201,1.47,202,1.656,203,1.832,206,2.479,214,2.929,225,1.47,246,2.202,269,3.231,278,2.687,363,3.796,364,2.851,365,2.851,366,2.851,367,2.851,370,2.851,373,2.851,376,2.851,377,3.159,382,1.795,384,1.47,385,2.479,386,1.47,402,1.904,403,2.281,404,2.281,405,2.281,406,2.281,407,2.281,408,2.281,409,2.281,410,2.281,411,2.281,412,2.281,413,2.281]],["title/interfaces/Task.html",[414,2.053,415,1.846]],["body/interfaces/Task.html",[3,0.327,4,0.283,5,0.283,7,0.522,12,0.032,16,2.346,23,0.436,30,0.022,31,0.022,75,3.696,91,1.045,214,2.676,232,2.46,272,2.184,282,1.985,302,3.832,303,3.832,414,2.184,415,3.545,416,3.389,417,2.46,418,3.832,419,3.696,420,3.282,421,4.25]],["title/controllers/TaskController.html",[0,1.283,422,2.053]],["body/controllers/TaskController.html",[0,0.897,2,0.897,3,0.214,4,0.186,5,0.186,7,0.343,8,1.144,11,1.942,12,0.032,13,1.081,15,1.644,19,0.597,20,0.457,23,0.214,24,0.011,25,1.17,27,1.786,30,0.017,31,0.017,78,1.616,80,2.625,89,1.81,90,1.664,91,0.688,92,1.532,94,2.31,107,1.29,108,1.29,109,1.29,110,3.927,111,2.435,113,1.858,115,1.858,116,1.858,121,1.29,129,2.8,132,2.31,137,4.023,230,1.616,298,2.604,380,1.858,381,1.858,384,1.435,386,1.435,415,1.29,418,3.265,422,2.162,423,1.858,424,2.8,425,3.354,426,4.492,427,2.8,428,2.8,429,2.226,430,2.226,431,2.226,432,2.226,433,2.226,434,2.226,435,2.226,436,2.226,437,1.858,438,2.226,439,2.226,440,1.858,441,2.604,442,2.226,443,2.226,444,2.121,445,1.858,446,2.8,447,2.226,448,2.226,449,2.226,450,2.226,451,2.226,452,2.226,453,2.226,454,2.226,455,2.226,456,2.226,457,2.226,458,2.226,459,2.226,460,2.226]],["title/modules/TaskModule.html",[32,1.086,47,1.846]],["body/modules/TaskModule.html",[2,1.803,3,0.321,4,0.278,5,0.278,12,0.032,19,0.698,20,0.684,23,0.321,24,0.016,30,0.022,31,0.022,32,1.722,34,1.463,35,1.463,36,1.753,37,1.753,38,1.463,39,2.655,40,1.753,45,2.544,47,3.571,48,2.352,49,1.753,50,1.753,52,2.884,179,2.421,203,2.335,225,2.149,422,3.256,444,3.047,445,2.784,461,2.784,462,3.335,463,2.784,464,3.335,465,3.335]],["title/injectables/TaskService.html",[67,0.779,444,1.674]],["body/injectables/TaskService.html",[3,0.183,4,0.158,5,0.158,7,0.292,8,1.012,12,0.032,13,1.066,15,1.529,19,0.556,20,0.389,23,0.183,24,0.009,27,1.661,30,0.015,31,0.015,67,0.726,68,0.833,80,2.546,89,1.806,90,1.661,91,0.92,92,1.529,93,3.05,94,2.149,99,3.739,132,2.149,201,1.913,202,1.378,203,1.665,206,2.154,214,2.777,225,1.223,229,2.477,232,3.255,249,3.743,250,3.449,251,1.584,269,2.118,274,1.584,298,2.395,301,2.154,384,1.223,386,1.223,418,3.064,424,2.477,427,2.477,428,2.477,437,2.477,440,2.477,441,2.395,444,1.56,446,2.477,466,1.584,467,2.968,468,4.132,469,1.898,470,2.968,471,1.898,472,2.968,473,1.898,474,1.898,475,1.898,476,1.898,477,1.898,478,1.584,479,1.898,480,2.968,481,4.132,482,2.968,483,1.898,484,1.898,485,2.968,486,1.898,487,1.898,488,2.968,489,1.898,490,2.968,491,1.898,492,1.898,493,1.898]],["title/classes/UpdateSchoolDto.html",[24,0.016,377,1.846]],["body/classes/UpdateSchoolDto.html",[3,0.418,4,0.362,5,0.362,12,0.031,19,0.656,23,0.418,24,0.021,30,0.026,31,0.026,155,3.414,246,2.795,278,2.279,279,1.903,281,3.148,377,3.07,385,3.148,494,3.62,495,5.296,496,4.337,497,3.62,498,3.62]],["title/classes/UpdateTaskDto.html",[24,0.016,441,1.846]],["body/classes/UpdateTaskDto.html",[3,0.348,4,0.301,5,0.301,7,0.556,11,1.899,12,0.031,13,1.178,16,2.243,19,0.447,23,0.348,24,0.023,30,0.023,31,0.023,91,1.078,92,1.899,214,2.478,279,1.583,282,2.069,286,3.011,295,4.383,296,3.044,297,1.896,300,2.619,301,3.812,302,3.385,303,3.385,441,2.733,499,4.648,500,3.608,501,3.608,502,3.608,503,3.608]],["title/coverage.html",[504,3.149]],["body/coverage.html",[0,1.983,1,1.735,5,0.224,6,2.247,12,0.032,21,1.415,24,0.028,30,0.019,31,0.019,38,1.181,67,1.365,69,2.247,76,1.735,77,2.247,91,0.552,96,1.56,104,1.56,117,1.415,121,1.56,154,2.247,172,1.954,176,1.56,183,1.56,198,2.247,203,1.084,272,1.735,278,1.415,280,2.247,281,2.799,298,1.56,299,2.247,300,2.799,308,2.247,327,2.247,341,2.247,355,2.247,359,1.735,360,2.247,361,1.735,362,2.247,377,1.56,382,1.415,402,2.247,414,1.735,415,1.56,417,2.799,422,1.735,423,2.247,441,1.56,444,1.415,466,2.247,494,2.247,499,2.247,504,1.954,505,2.691,506,2.691,507,2.691,508,6.339,509,5.421,510,3.856,511,2.691,512,2.691,513,4.922,514,2.247,515,3.856,516,5.21,517,2.247,518,2.691,519,3.856,520,3.856,521,2.691,522,2.691]],["title/dependencies.html",[35,1.68,523,2.224]],["body/dependencies.html",[12,0.032,20,0.784,24,0.024,30,0.024,31,0.024,35,1.677,58,3.19,59,3.19,124,3.19,125,3.19,169,2.463,182,3.19,188,2.463,228,3.19,297,2.009,317,4.085,350,3.19,478,3.19,497,3.19,498,3.19,524,5.398,525,3.822,526,3.822,527,3.822,528,3.822,529,3.822,530,3.822,531,3.822,532,3.822,533,3.822,534,3.822,535,3.822,536,3.822,537,3.822,538,3.822,539,3.822]],["title/miscellaneous/functions.html",[540,1.717,541,3.196]],["body/miscellaneous/functions.html",[7,0.741,12,0.028,30,0.028,31,0.028,38,2.622,517,4.015,540,3.101,541,4.015,542,4.81]],["title/index.html",[7,0.41,543,2.665,544,2.665]],["body/index.html",[4,0.267,12,0.031,30,0.022,31,0.022,60,2.677,348,2.677,420,2.067,504,2.328,545,3.207,546,3.207,547,4.358,548,3.207,549,3.207,550,3.207,551,3.207,552,3.207,553,3.207,554,4.951,555,3.207,556,3.207,557,3.207,558,3.207,559,4.951,560,5.862,561,3.207,562,3.207,563,5.73,564,3.207,565,3.207,566,4.358,567,3.207,568,3.207,569,3.207,570,3.207,571,4.358,572,4.358,573,3.207,574,3.207,575,3.207,576,4.358,577,4.358,578,3.207,579,3.207,580,3.207,581,3.207,582,3.207,583,2.677,584,3.207,585,3.207,586,3.207,587,3.207,588,3.207,589,3.207,590,3.207,591,3.207,592,3.207,593,2.677,594,3.207,595,3.207,596,3.207,597,3.207,598,3.207,599,3.207,600,2.677]],["title/modules.html",[34,1.904]],["body/modules.html",[12,0.026,30,0.026,31,0.026,33,2.81,34,1.913,44,2.527,45,1.913,46,2.527,47,2.527,583,5.105,601,6.115,602,6.115,603,6.115]],["title/overview.html",[604,3.622]],["body/overview.html",[2,1.187,12,0.031,21,2.489,30,0.02,31,0.02,32,1.005,33,3.953,34,1.293,35,1.293,36,1.549,37,1.549,38,1.293,39,1.549,40,1.549,41,2.46,42,2.46,43,2.46,44,3.442,45,2.606,46,3.322,47,3.442,48,2.161,49,1.549,50,1.549,68,1.293,117,2.489,173,2.46,175,2.46,176,2.745,203,2.355,279,1.293,336,2.46,337,2.46,338,2.46,382,2.489,397,2.46,399,2.46,414,1.9,419,2.139,444,2.489,461,2.46,463,2.46,604,2.46,605,2.947,606,2.947,607,4.112]],["title/properties.html",[282,1.68,523,2.224]],["body/properties.html",[12,0.031,30,0.028,31,0.028,282,2.075,420,3.048,593,3.947,600,3.947,608,4.729,609,4.729,610,4.729]],["title/miscellaneous/variables.html",[540,1.717,611,3.196]],["body/miscellaneous/variables.html",[7,0.56,12,0.032,30,0.023,31,0.023,75,3.828,91,0.973,183,2.748,193,2.642,272,3.056,302,3.399,303,3.399,325,3.038,415,3.507,417,2.642,418,3.399,419,3.828,420,3.399,421,4.402,514,3.038,540,2.346,611,3.038,612,3.639,613,3.639,614,3.639,615,4.741,616,4.741,617,3.639,618,3.639]]],"invertedIndex":[["",{"_index":12,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateSchoolDto.html":{},"classes/CreateTaskDto.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDTO.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/RegisterDTO.html":{},"classes/School.html":{},"controllers/SchoolController.html":{},"modules/SchoolModule.html":{},"injectables/SchoolService.html":{},"interfaces/Task.html":{},"controllers/TaskController.html":{},"modules/TaskModule.html":{},"injectables/TaskService.html":{},"classes/UpdateSchoolDto.html":{},"classes/UpdateTaskDto.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":508,"title":{},"body":{"coverage.html":{}}}],["0.0.1",{"_index":609,"title":{},"body":{"properties.html":{}}}],["0.1.13",{"_index":537,"title":{},"body":{"dependencies.html":{}}}],["0.14.1",{"_index":532,"title":{},"body":{"dependencies.html":{}}}],["0.5.1",{"_index":531,"title":{},"body":{"dependencies.html":{}}}],["0.7.0",{"_index":533,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":516,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":509,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":513,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":510,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":519,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":520,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":419,"title":{},"body":{"interfaces/Task.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["10.0.0",{"_index":524,"title":{},"body":{"dependencies.html":{}}}],["10.0.3",{"_index":526,"title":{},"body":{"dependencies.html":{}}}],["10.2.0",{"_index":525,"title":{},"body":{"dependencies.html":{}}}],["12",{"_index":245,"title":{},"body":{"injectables/AuthService.html":{}}}],["2",{"_index":75,"title":{},"body":{"injectables/AppService.html":{},"interfaces/Task.html":{},"miscellaneous/variables.html":{}}}],["200",{"_index":250,"title":{},"body":{"injectables/AuthService.html":{},"injectables/TaskService.html":{}}}],["201",{"_index":484,"title":{},"body":{"injectables/TaskService.html":{}}}],["3",{"_index":421,"title":{},"body":{"interfaces/Task.html":{},"miscellaneous/variables.html":{}}}],["3600",{"_index":618,"title":{},"body":{"miscellaneous/variables.html":{}}}],["4",{"_index":606,"title":{},"body":{"overview.html":{}}}],["4.0.0",{"_index":527,"title":{},"body":{"dependencies.html":{}}}],["4.0.1",{"_index":534,"title":{},"body":{"dependencies.html":{}}}],["5",{"_index":605,"title":{},"body":{"overview.html":{}}}],["5.1.1",{"_index":529,"title":{},"body":{"dependencies.html":{}}}],["5.8.1",{"_index":528,"title":{},"body":{"dependencies.html":{}}}],["5/7",{"_index":512,"title":{},"body":{"coverage.html":{}}}],["7",{"_index":607,"title":{},"body":{"overview.html":{}}}],["7.8.1",{"_index":539,"title":{},"body":{"dependencies.html":{}}}],["71",{"_index":511,"title":{},"body":{"coverage.html":{}}}],["accesstoken",{"_index":262,"title":{},"body":{"injectables/AuthService.html":{}}}],["address",{"_index":283,"title":{},"body":{"classes/CreateSchoolDto.html":{}}}],["alldata",{"_index":485,"title":{},"body":{"injectables/TaskService.html":{}}}],["already",{"_index":238,"title":{},"body":{"injectables/AuthService.html":{}}}],["amazing",{"_index":584,"title":{},"body":{"index.html":{}}}],["app",{"_index":348,"title":{},"body":{"injectables/PrismaService.html":{},"index.html":{}}}],["app.close",{"_index":354,"title":{},"body":{"injectables/PrismaService.html":{}}}],["app.controller",{"_index":53,"title":{},"body":{"modules/AppModule.html":{}}}],["app.service",{"_index":22,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{}}}],["appcontroller",{"_index":1,"title":{"controllers/AppController.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"coverage.html":{}}}],["applications",{"_index":553,"title":{},"body":{"index.html":{}}}],["appmodule",{"_index":33,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["appservice",{"_index":21,"title":{"injectables/AppService.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"coverage.html":{},"overview.html":{}}}],["arthur666",{"_index":617,"title":{},"body":{"miscellaneous/variables.html":{}}}],["async",{"_index":80,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/PrismaService.html":{},"controllers/SchoolController.html":{},"injectables/SchoolService.html":{},"controllers/TaskController.html":{},"injectables/TaskService.html":{}}}],["auth",{"_index":79,"title":{},"body":{"controllers/AuthController.html":{}}}],["auth.controller",{"_index":178,"title":{},"body":{"modules/AuthModule.html":{}}}],["auth.guard",{"_index":122,"title":{},"body":{"controllers/AuthController.html":{}}}],["auth.service",{"_index":118,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{}}}],["auth/auth.module",{"_index":56,"title":{},"body":{"modules/AppModule.html":{}}}],["authcontroller",{"_index":76,"title":{"controllers/AuthController.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"coverage.html":{}}}],["authguard",{"_index":121,"title":{"injectables/AuthGuard.html":{}},"body":{"controllers/AuthController.html":{},"injectables/AuthGuard.html":{},"controllers/TaskController.html":{},"coverage.html":{}}}],["authguardpassport",{"_index":168,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["authguardpassport('jwt",{"_index":156,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["authmodule",{"_index":44,"title":{"modules/AuthModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules.html":{},"overview.html":{}}}],["author",{"_index":593,"title":{},"body":{"index.html":{},"properties.html":{}}}],["authservice",{"_index":117,"title":{"injectables/AuthService.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"coverage.html":{},"overview.html":{}}}],["avatar",{"_index":81,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["avatar(@req",{"_index":150,"title":{},"body":{"controllers/AuthController.html":{}}}],["avatar(req",{"_index":85,"title":{},"body":{"controllers/AuthController.html":{}}}],["await",{"_index":132,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/PrismaService.html":{},"controllers/SchoolController.html":{},"injectables/SchoolService.html":{},"controllers/TaskController.html":{},"injectables/TaskService.html":{}}}],["backers",{"_index":585,"title":{},"body":{"index.html":{}}}],["bcrypt",{"_index":228,"title":{},"body":{"injectables/AuthService.html":{},"dependencies.html":{}}}],["berhasil",{"_index":277,"title":{},"body":{"injectables/AuthService.html":{}}}],["body",{"_index":110,"title":{},"body":{"controllers/AuthController.html":{},"controllers/SchoolController.html":{},"controllers/TaskController.html":{}}}],["bootstrap",{"_index":38,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PrismaModule.html":{},"modules/SchoolModule.html":{},"modules/TaskModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"overview.html":{}}}],["browse",{"_index":603,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":601,"title":{},"body":{"modules.html":{}}}],["building",{"_index":548,"title":{},"body":{"index.html":{}}}],["canactivate",{"_index":157,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["canactivate(context",{"_index":159,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["cb",{"_index":146,"title":{},"body":{"controllers/AuthController.html":{}}}],["cb(null",{"_index":147,"title":{},"body":{"controllers/AuthController.html":{}}}],["checkuserexists",{"_index":233,"title":{},"body":{"injectables/AuthService.html":{}}}],["class",{"_index":24,"title":{"classes/CreateSchoolDto.html":{},"classes/CreateTaskDto.html":{},"classes/LoginDTO.html":{},"classes/RegisterDTO.html":{},"classes/School.html":{},"classes/UpdateSchoolDto.html":{},"classes/UpdateTaskDto.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateSchoolDto.html":{},"classes/CreateTaskDto.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDTO.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/RegisterDTO.html":{},"classes/School.html":{},"controllers/SchoolController.html":{},"modules/SchoolModule.html":{},"injectables/SchoolService.html":{},"controllers/TaskController.html":{},"modules/TaskModule.html":{},"injectables/TaskService.html":{},"classes/UpdateSchoolDto.html":{},"classes/UpdateTaskDto.html":{},"coverage.html":{},"dependencies.html":{}}}],["classes",{"_index":279,"title":{},"body":{"classes/CreateSchoolDto.html":{},"classes/CreateTaskDto.html":{},"classes/LoginDTO.html":{},"classes/RegisterDTO.html":{},"classes/School.html":{},"classes/UpdateSchoolDto.html":{},"classes/UpdateTaskDto.html":{},"overview.html":{}}}],["cluster_appmodule",{"_index":41,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":43,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":42,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_authmodule",{"_index":173,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_imports",{"_index":174,"title":{},"body":{"modules/AuthModule.html":{}}}],["cluster_authmodule_providers",{"_index":175,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_prismamodule",{"_index":336,"title":{},"body":{"modules/PrismaModule.html":{},"overview.html":{}}}],["cluster_prismamodule_exports",{"_index":338,"title":{},"body":{"modules/PrismaModule.html":{},"overview.html":{}}}],["cluster_prismamodule_providers",{"_index":337,"title":{},"body":{"modules/PrismaModule.html":{},"overview.html":{}}}],["cluster_schoolmodule",{"_index":397,"title":{},"body":{"modules/SchoolModule.html":{},"overview.html":{}}}],["cluster_schoolmodule_imports",{"_index":398,"title":{},"body":{"modules/SchoolModule.html":{}}}],["cluster_schoolmodule_providers",{"_index":399,"title":{},"body":{"modules/SchoolModule.html":{},"overview.html":{}}}],["cluster_taskmodule",{"_index":461,"title":{},"body":{"modules/TaskModule.html":{},"overview.html":{}}}],["cluster_taskmodule_imports",{"_index":462,"title":{},"body":{"modules/TaskModule.html":{}}}],["cluster_taskmodule_providers",{"_index":463,"title":{},"body":{"modules/TaskModule.html":{},"overview.html":{}}}],["compare",{"_index":226,"title":{},"body":{"injectables/AuthService.html":{}}}],["compare(data.password",{"_index":257,"title":{},"body":{"injectables/AuthService.html":{}}}],["console.log(user_id",{"_index":268,"title":{},"body":{"injectables/AuthService.html":{}}}],["const",{"_index":232,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Task.html":{},"injectables/TaskService.html":{}}}],["constructor",{"_index":201,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/SchoolService.html":{},"injectables/TaskService.html":{}}}],["constructor(prisma",{"_index":202,"title":{},"body":{"injectables/AuthService.html":{},"injectables/SchoolService.html":{},"injectables/TaskService.html":{}}}],["constructor(private",{"_index":25,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/SchoolController.html":{},"injectables/SchoolService.html":{},"controllers/TaskController.html":{}}}],["context",{"_index":162,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["controller",{"_index":0,"title":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/SchoolController.html":{},"controllers/TaskController.html":{}},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/SchoolController.html":{},"controllers/TaskController.html":{},"coverage.html":{}}}],["controller('auth",{"_index":128,"title":{},"body":{"controllers/AuthController.html":{}}}],["controller('school",{"_index":387,"title":{},"body":{"controllers/SchoolController.html":{}}}],["controller('task",{"_index":448,"title":{},"body":{"controllers/TaskController.html":{}}}],["controllers",{"_index":2,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"controllers/SchoolController.html":{},"modules/SchoolModule.html":{},"controllers/TaskController.html":{},"modules/TaskModule.html":{},"overview.html":{}}}],["coverage",{"_index":504,"title":{"coverage.html":{}},"body":{"coverage.html":{},"index.html":{}}}],["create",{"_index":246,"title":{},"body":{"injectables/AuthService.html":{},"controllers/SchoolController.html":{},"injectables/SchoolService.html":{},"classes/UpdateSchoolDto.html":{}}}],["create(@body",{"_index":388,"title":{},"body":{"controllers/SchoolController.html":{}}}],["create(createschooldto",{"_index":367,"title":{},"body":{"controllers/SchoolController.html":{},"injectables/SchoolService.html":{}}}],["createdata",{"_index":482,"title":{},"body":{"injectables/TaskService.html":{}}}],["createschooldto",{"_index":278,"title":{"classes/CreateSchoolDto.html":{}},"body":{"classes/CreateSchoolDto.html":{},"controllers/SchoolController.html":{},"injectables/SchoolService.html":{},"classes/UpdateSchoolDto.html":{},"coverage.html":{}}}],["createtask",{"_index":424,"title":{},"body":{"controllers/TaskController.html":{},"injectables/TaskService.html":{}}}],["createtask(@body",{"_index":449,"title":{},"body":{"controllers/TaskController.html":{}}}],["createtask(body",{"_index":429,"title":{},"body":{"controllers/TaskController.html":{}}}],["createtask(data",{"_index":470,"title":{},"body":{"injectables/TaskService.html":{}}}],["createtaskdto",{"_index":298,"title":{"classes/CreateTaskDto.html":{}},"body":{"classes/CreateTaskDto.html":{},"controllers/TaskController.html":{},"injectables/TaskService.html":{},"coverage.html":{}}}],["createuser",{"_index":247,"title":{},"body":{"injectables/AuthService.html":{}}}],["credentials",{"_index":260,"title":{},"body":{"injectables/AuthService.html":{}}}],["data",{"_index":99,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/SchoolService.html":{},"injectables/TaskService.html":{}}}],["data.email",{"_index":236,"title":{},"body":{"injectables/AuthService.html":{}}}],["data.id_user",{"_index":480,"title":{},"body":{"injectables/TaskService.html":{}}}],["data.password",{"_index":243,"title":{},"body":{"injectables/AuthService.html":{}}}],["declarations",{"_index":37,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PrismaModule.html":{},"modules/SchoolModule.html":{},"modules/TaskModule.html":{},"overview.html":{}}}],["decorators",{"_index":11,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"classes/CreateSchoolDto.html":{},"classes/CreateTaskDto.html":{},"classes/LoginDTO.html":{},"classes/RegisterDTO.html":{},"controllers/SchoolController.html":{},"controllers/TaskController.html":{},"classes/UpdateTaskDto.html":{}}}],["default",{"_index":615,"title":{},"body":{"miscellaneous/variables.html":{}}}],["defaultstrategy",{"_index":187,"title":{},"body":{"modules/AuthModule.html":{}}}],["defined",{"_index":13,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthGuard.html":{},"injectables/AuthService.html":{},"classes/CreateSchoolDto.html":{},"classes/CreateTaskDto.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDTO.html":{},"injectables/PrismaService.html":{},"classes/RegisterDTO.html":{},"controllers/SchoolController.html":{},"injectables/SchoolService.html":{},"controllers/TaskController.html":{},"injectables/TaskService.html":{},"classes/UpdateTaskDto.html":{}}}],["delete",{"_index":381,"title":{},"body":{"controllers/SchoolController.html":{},"controllers/TaskController.html":{}}}],["delete(':id",{"_index":374,"title":{},"body":{"controllers/SchoolController.html":{}}}],["delete(':task_id",{"_index":458,"title":{},"body":{"controllers/TaskController.html":{}}}],["deleted",{"_index":493,"title":{},"body":{"injectables/TaskService.html":{}}}],["deletedata",{"_index":490,"title":{},"body":{"injectables/TaskService.html":{}}}],["deletetaskbyid",{"_index":425,"title":{},"body":{"controllers/TaskController.html":{}}}],["deletetaskbyid(@param('task_id",{"_index":459,"title":{},"body":{"controllers/TaskController.html":{}}}],["deletetaskbyid(task_id",{"_index":432,"title":{},"body":{"controllers/TaskController.html":{}}}],["delettaskbyid",{"_index":467,"title":{},"body":{"injectables/TaskService.html":{}}}],["delettaskbyid(task_id",{"_index":472,"title":{},"body":{"injectables/TaskService.html":{}}}],["dependencies",{"_index":35,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PrismaModule.html":{},"modules/SchoolModule.html":{},"modules/TaskModule.html":{},"dependencies.html":{},"overview.html":{}}}],["description",{"_index":420,"title":{},"body":{"interfaces/Task.html":{},"index.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["destination",{"_index":143,"title":{},"body":{"controllers/AuthController.html":{}}}],["detail",{"_index":216,"title":{},"body":{"injectables/AuthService.html":{}}}],["development",{"_index":562,"title":{},"body":{"index.html":{}}}],["disable",{"_index":108,"title":{},"body":{"controllers/AuthController.html":{},"modules/PrismaModule.html":{},"controllers/SchoolController.html":{},"modules/SchoolModule.html":{},"controllers/TaskController.html":{}}}],["diskstorage",{"_index":126,"title":{},"body":{"controllers/AuthController.html":{}}}],["documentation",{"_index":505,"title":{},"body":{"coverage.html":{}}}],["dto/create",{"_index":384,"title":{},"body":{"controllers/SchoolController.html":{},"injectables/SchoolService.html":{},"controllers/TaskController.html":{},"injectables/TaskService.html":{}}}],["dto/login.dto",{"_index":120,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["dto/register.dto",{"_index":119,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["dto/update",{"_index":386,"title":{},"body":{"controllers/SchoolController.html":{},"injectables/SchoolService.html":{},"controllers/TaskController.html":{},"injectables/TaskService.html":{}}}],["e2e",{"_index":573,"title":{},"body":{"index.html":{}}}],["efficient",{"_index":549,"title":{},"body":{"index.html":{}}}],["email",{"_index":235,"title":{},"body":{"injectables/AuthService.html":{},"classes/CreateSchoolDto.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDTO.html":{},"classes/RegisterDTO.html":{}}}],["enableshutdownhooks",{"_index":343,"title":{},"body":{"injectables/PrismaService.html":{}}}],["enableshutdownhooks(app",{"_index":345,"title":{},"body":{"injectables/PrismaService.html":{}}}],["err",{"_index":166,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["eslint",{"_index":107,"title":{},"body":{"controllers/AuthController.html":{},"modules/PrismaModule.html":{},"controllers/SchoolController.html":{},"modules/SchoolModule.html":{},"controllers/TaskController.html":{}}}],["example",{"_index":559,"title":{},"body":{"index.html":{}}}],["executioncontext",{"_index":160,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["existinguser",{"_index":253,"title":{},"body":{"injectables/AuthService.html":{}}}],["existinguser.email",{"_index":267,"title":{},"body":{"injectables/AuthService.html":{}}}],["existinguser.id",{"_index":265,"title":{},"body":{"injectables/AuthService.html":{}}}],["existinguser.name",{"_index":266,"title":{},"body":{"injectables/AuthService.html":{}}}],["existinguser.password",{"_index":258,"title":{},"body":{"injectables/AuthService.html":{}}}],["expired",{"_index":325,"title":{},"body":{"injectables/JwtStrategy.html":{},"miscellaneous/variables.html":{}}}],["expiresin",{"_index":196,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{}}}],["export",{"_index":23,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateSchoolDto.html":{},"classes/CreateTaskDto.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDTO.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/RegisterDTO.html":{},"classes/School.html":{},"controllers/SchoolController.html":{},"modules/SchoolModule.html":{},"injectables/SchoolService.html":{},"interfaces/Task.html":{},"controllers/TaskController.html":{},"modules/TaskModule.html":{},"injectables/TaskService.html":{},"classes/UpdateSchoolDto.html":{},"classes/UpdateTaskDto.html":{}}}],["exports",{"_index":40,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PrismaModule.html":{},"modules/SchoolModule.html":{},"modules/TaskModule.html":{},"overview.html":{}}}],["express",{"_index":125,"title":{},"body":{"controllers/AuthController.html":{},"dependencies.html":{}}}],["express.multer.file",{"_index":86,"title":{},"body":{"controllers/AuthController.html":{}}}],["extends",{"_index":155,"title":{},"body":{"injectables/AuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/PrismaService.html":{},"classes/UpdateSchoolDto.html":{}}}],["extractjwt",{"_index":315,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["extractjwt.fromauthheaderasbearertoken",{"_index":320,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["false",{"_index":191,"title":{},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{}}}],["file",{"_index":5,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateSchoolDto.html":{},"classes/CreateTaskDto.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDTO.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/RegisterDTO.html":{},"classes/School.html":{},"controllers/SchoolController.html":{},"modules/SchoolModule.html":{},"injectables/SchoolService.html":{},"interfaces/Task.html":{},"controllers/TaskController.html":{},"modules/TaskModule.html":{},"injectables/TaskService.html":{},"classes/UpdateSchoolDto.html":{},"classes/UpdateTaskDto.html":{},"coverage.html":{}}}],["file.filename",{"_index":153,"title":{},"body":{"controllers/AuthController.html":{}}}],["file.originalname",{"_index":148,"title":{},"body":{"controllers/AuthController.html":{}}}],["fileinterceptor",{"_index":123,"title":{},"body":{"controllers/AuthController.html":{}}}],["filename",{"_index":145,"title":{},"body":{"controllers/AuthController.html":{}}}],["findall",{"_index":363,"title":{},"body":{"controllers/SchoolController.html":{},"injectables/SchoolService.html":{}}}],["findone",{"_index":364,"title":{},"body":{"controllers/SchoolController.html":{},"injectables/SchoolService.html":{}}}],["findone(@param('id",{"_index":391,"title":{},"body":{"controllers/SchoolController.html":{}}}],["findone(id",{"_index":370,"title":{},"body":{"controllers/SchoolController.html":{},"injectables/SchoolService.html":{}}}],["found",{"_index":254,"title":{},"body":{"injectables/AuthService.html":{}}}],["framework",{"_index":547,"title":{},"body":{"index.html":{}}}],["function",{"_index":518,"title":{},"body":{"coverage.html":{}}}],["functions",{"_index":541,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["generate",{"_index":209,"title":{},"body":{"injectables/AuthService.html":{}}}],["generatejwt",{"_index":199,"title":{},"body":{"injectables/AuthService.html":{}}}],["generatejwt(payload",{"_index":207,"title":{},"body":{"injectables/AuthService.html":{}}}],["get('/path2",{"_index":17,"title":{},"body":{"controllers/AppController.html":{}}}],["get(':id",{"_index":371,"title":{},"body":{"controllers/SchoolController.html":{}}}],["get(':task_id",{"_index":452,"title":{},"body":{"controllers/TaskController.html":{}}}],["get('profile",{"_index":138,"title":{},"body":{"controllers/AuthController.html":{}}}],["getalltask",{"_index":468,"title":{},"body":{"injectables/TaskService.html":{}}}],["getalltasks",{"_index":426,"title":{},"body":{"controllers/TaskController.html":{}}}],["gethello",{"_index":9,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{}}}],["gethello2",{"_index":10,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{}}}],["gettaskbyid",{"_index":427,"title":{},"body":{"controllers/TaskController.html":{},"injectables/TaskService.html":{}}}],["gettaskbyid(@param('task_id",{"_index":453,"title":{},"body":{"controllers/TaskController.html":{}}}],["gettaskbyid(task_id",{"_index":437,"title":{},"body":{"controllers/TaskController.html":{},"injectables/TaskService.html":{}}}],["getting",{"_index":543,"title":{"index.html":{}},"body":{}}],["grow",{"_index":580,"title":{},"body":{"index.html":{}}}],["handlerequest",{"_index":158,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["handlerequest(err",{"_index":163,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["hash",{"_index":227,"title":{},"body":{"injectables/AuthService.html":{}}}],["hash(data.password",{"_index":244,"title":{},"body":{"injectables/AuthService.html":{}}}],["hashing",{"_index":241,"title":{},"body":{"injectables/AuthService.html":{}}}],["hello",{"_index":72,"title":{},"body":{"injectables/AppService.html":{}}}],["here",{"_index":590,"title":{},"body":{"index.html":{}}}],["httpexception",{"_index":222,"title":{},"body":{"injectables/AuthService.html":{}}}],["httpexception('bad",{"_index":273,"title":{},"body":{"injectables/AuthService.html":{}}}],["httpexception('invalid",{"_index":259,"title":{},"body":{"injectables/AuthService.html":{}}}],["httpexception('user",{"_index":237,"title":{},"body":{"injectables/AuthService.html":{}}}],["https://nestjs.com",{"_index":597,"title":{},"body":{"index.html":{}}}],["httpstatus",{"_index":223,"title":{},"body":{"injectables/AuthService.html":{}}}],["httpstatus.bad_request",{"_index":275,"title":{},"body":{"injectables/AuthService.html":{}}}],["httpstatus.found",{"_index":240,"title":{},"body":{"injectables/AuthService.html":{}}}],["httpstatus.not_found",{"_index":255,"title":{},"body":{"injectables/AuthService.html":{}}}],["httpstatus.unauthorized",{"_index":261,"title":{},"body":{"injectables/AuthService.html":{}}}],["id",{"_index":269,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"controllers/SchoolController.html":{},"injectables/SchoolService.html":{},"injectables/TaskService.html":{}}}],["id_user",{"_index":301,"title":{},"body":{"classes/CreateTaskDto.html":{},"injectables/TaskService.html":{},"classes/UpdateTaskDto.html":{}}}],["identifier",{"_index":506,"title":{},"body":{"coverage.html":{}}}],["ignoreexpiration",{"_index":321,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["implements",{"_index":351,"title":{},"body":{"injectables/PrismaService.html":{}}}],["import",{"_index":19,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateSchoolDto.html":{},"classes/CreateTaskDto.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDTO.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/RegisterDTO.html":{},"controllers/SchoolController.html":{},"modules/SchoolModule.html":{},"injectables/SchoolService.html":{},"controllers/TaskController.html":{},"modules/TaskModule.html":{},"injectables/TaskService.html":{},"classes/UpdateSchoolDto.html":{},"classes/UpdateTaskDto.html":{}}}],["imports",{"_index":52,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/SchoolModule.html":{},"modules/TaskModule.html":{}}}],["index",{"_index":7,"title":{"index.html":{}},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthGuard.html":{},"injectables/AuthService.html":{},"classes/CreateSchoolDto.html":{},"classes/CreateTaskDto.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDTO.html":{},"injectables/PrismaService.html":{},"classes/RegisterDTO.html":{},"controllers/SchoolController.html":{},"injectables/SchoolService.html":{},"interfaces/Task.html":{},"controllers/TaskController.html":{},"injectables/TaskService.html":{},"classes/UpdateTaskDto.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["inestapplication",{"_index":346,"title":{},"body":{"injectables/PrismaService.html":{}}}],["info",{"_index":3,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateSchoolDto.html":{},"classes/CreateTaskDto.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDTO.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/RegisterDTO.html":{},"classes/School.html":{},"controllers/SchoolController.html":{},"modules/SchoolModule.html":{},"injectables/SchoolService.html":{},"interfaces/Task.html":{},"controllers/TaskController.html":{},"modules/TaskModule.html":{},"injectables/TaskService.html":{},"classes/UpdateSchoolDto.html":{},"classes/UpdateTaskDto.html":{}}}],["inject",{"_index":477,"title":{},"body":{"injectables/TaskService.html":{}}}],["inject(request",{"_index":479,"title":{},"body":{"injectables/TaskService.html":{}}}],["injectable",{"_index":67,"title":{"injectables/AppService.html":{},"injectables/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/PrismaService.html":{},"injectables/SchoolService.html":{},"injectables/TaskService.html":{}},"body":{"injectables/AppService.html":{},"injectables/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/PrismaService.html":{},"injectables/SchoolService.html":{},"injectables/TaskService.html":{},"coverage.html":{}}}],["injectables",{"_index":68,"title":{},"body":{"injectables/AppService.html":{},"injectables/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/PrismaService.html":{},"injectables/SchoolService.html":{},"injectables/TaskService.html":{},"overview.html":{}}}],["installation",{"_index":558,"title":{},"body":{"index.html":{}}}],["installrunning",{"_index":561,"title":{},"body":{"index.html":{}}}],["interface",{"_index":414,"title":{"interfaces/Task.html":{}},"body":{"interfaces/Task.html":{},"coverage.html":{},"overview.html":{}}}],["interfaces",{"_index":416,"title":{},"body":{"interfaces/Task.html":{}}}],["isemail",{"_index":293,"title":{},"body":{"classes/CreateSchoolDto.html":{},"classes/LoginDTO.html":{}}}],["isnotempty",{"_index":294,"title":{},"body":{"classes/CreateSchoolDto.html":{},"classes/CreateTaskDto.html":{},"classes/LoginDTO.html":{},"classes/RegisterDTO.html":{}}}],["isnotempty()@isemail",{"_index":328,"title":{},"body":{"classes/LoginDTO.html":{}}}],["isnotempty()@isstring",{"_index":305,"title":{},"body":{"classes/CreateTaskDto.html":{},"classes/RegisterDTO.html":{}}}],["isnotempty()@isstring()@minlength(6)@maxlength(20",{"_index":330,"title":{},"body":{"classes/LoginDTO.html":{},"classes/RegisterDTO.html":{}}}],["isoptional",{"_index":295,"title":{},"body":{"classes/CreateSchoolDto.html":{},"classes/UpdateTaskDto.html":{}}}],["isoptional()@isstring",{"_index":502,"title":{},"body":{"classes/UpdateTaskDto.html":{}}}],["isstring",{"_index":296,"title":{},"body":{"classes/CreateSchoolDto.html":{},"classes/CreateTaskDto.html":{},"classes/LoginDTO.html":{},"classes/RegisterDTO.html":{},"classes/UpdateTaskDto.html":{}}}],["isstring()@isnotempty",{"_index":291,"title":{},"body":{"classes/CreateSchoolDto.html":{},"classes/CreateTaskDto.html":{}}}],["isstring()@isoptional",{"_index":286,"title":{},"body":{"classes/CreateSchoolDto.html":{},"classes/UpdateTaskDto.html":{}}}],["isstring()@isoptional()@isemail",{"_index":288,"title":{},"body":{"classes/CreateSchoolDto.html":{}}}],["isvalidpassword",{"_index":256,"title":{},"body":{"injectables/AuthService.html":{}}}],["join",{"_index":60,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["join(__dirname",{"_index":65,"title":{},"body":{"modules/AppModule.html":{}}}],["jwt",{"_index":188,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"dependencies.html":{}}}],["jwt.strategy",{"_index":185,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwt_config",{"_index":183,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["jwt_config.expired",{"_index":197,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{}}}],["jwt_config.secret",{"_index":194,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{}}}],["jwtfromrequest",{"_index":319,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["jwtmodule",{"_index":181,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtmodule.register",{"_index":192,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtservice",{"_index":204,"title":{},"body":{"injectables/AuthService.html":{}}}],["jwtstrategy",{"_index":176,"title":{"injectables/JwtStrategy.html":{}},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{},"coverage.html":{},"overview.html":{}}}],["kamil",{"_index":594,"title":{},"body":{"index.html":{}}}],["ke",{"_index":74,"title":{},"body":{"injectables/AppService.html":{}}}],["legend",{"_index":36,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PrismaModule.html":{},"modules/SchoolModule.html":{},"modules/TaskModule.html":{},"overview.html":{}}}],["license",{"_index":600,"title":{},"body":{"index.html":{},"properties.html":{}}}],["licensed",{"_index":577,"title":{},"body":{"index.html":{}}}],["login",{"_index":82,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["login(@body",{"_index":135,"title":{},"body":{"controllers/AuthController.html":{}}}],["login(data",{"_index":95,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["logindto",{"_index":96,"title":{"classes/LoginDTO.html":{}},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/LoginDTO.html":{},"coverage.html":{}}}],["matching",{"_index":31,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateSchoolDto.html":{},"classes/CreateTaskDto.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDTO.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/RegisterDTO.html":{},"classes/School.html":{},"controllers/SchoolController.html":{},"modules/SchoolModule.html":{},"injectables/SchoolService.html":{},"interfaces/Task.html":{},"controllers/TaskController.html":{},"modules/TaskModule.html":{},"injectables/TaskService.html":{},"classes/UpdateSchoolDto.html":{},"classes/UpdateTaskDto.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["maxlength",{"_index":332,"title":{},"body":{"classes/LoginDTO.html":{},"classes/RegisterDTO.html":{}}}],["maxlength(20",{"_index":335,"title":{},"body":{"classes/LoginDTO.html":{},"classes/RegisterDTO.html":{}}}],["message",{"_index":251,"title":{},"body":{"injectables/AuthService.html":{},"injectables/TaskService.html":{}}}],["metadata",{"_index":536,"title":{},"body":{"dependencies.html":{}}}],["methods",{"_index":8,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/PrismaService.html":{},"controllers/SchoolController.html":{},"injectables/SchoolService.html":{},"controllers/TaskController.html":{},"injectables/TaskService.html":{}}}],["minlength",{"_index":333,"title":{},"body":{"classes/LoginDTO.html":{},"classes/RegisterDTO.html":{}}}],["minlength(6",{"_index":334,"title":{},"body":{"classes/LoginDTO.html":{},"classes/RegisterDTO.html":{}}}],["miscellaneous",{"_index":540,"title":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":576,"title":{},"body":{"index.html":{}}}],["mode",{"_index":566,"title":{},"body":{"index.html":{}}}],["module",{"_index":32,"title":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PrismaModule.html":{},"modules/SchoolModule.html":{},"modules/TaskModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PrismaModule.html":{},"modules/SchoolModule.html":{},"modules/TaskModule.html":{},"overview.html":{}}}],["modules",{"_index":34,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PrismaModule.html":{},"modules/SchoolModule.html":{},"modules/TaskModule.html":{},"modules.html":{},"overview.html":{}}}],["more",{"_index":589,"title":{},"body":{"index.html":{}}}],["multer",{"_index":127,"title":{},"body":{"controllers/AuthController.html":{}}}],["myśliwiec",{"_index":595,"title":{},"body":{"index.html":{}}}],["name",{"_index":90,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/PrismaService.html":{},"classes/RegisterDTO.html":{},"controllers/SchoolController.html":{},"injectables/SchoolService.html":{},"controllers/TaskController.html":{},"injectables/TaskService.html":{}}}],["nest",{"_index":554,"title":{},"body":{"index.html":{}}}],["nestframework",{"_index":599,"title":{},"body":{"index.html":{}}}],["nestjs/common",{"_index":20,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"controllers/SchoolController.html":{},"modules/SchoolModule.html":{},"injectables/SchoolService.html":{},"controllers/TaskController.html":{},"modules/TaskModule.html":{},"injectables/TaskService.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":478,"title":{},"body":{"injectables/TaskService.html":{},"dependencies.html":{}}}],["nestjs/jwt",{"_index":182,"title":{},"body":{"modules/AuthModule.html":{},"dependencies.html":{}}}],["nestjs/jwt/dist",{"_index":224,"title":{},"body":{"injectables/AuthService.html":{}}}],["nestjs/mapped",{"_index":497,"title":{},"body":{"classes/UpdateSchoolDto.html":{},"dependencies.html":{}}}],["nestjs/passport",{"_index":169,"title":{},"body":{"injectables/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{},"dependencies.html":{}}}],["nestjs/platform",{"_index":124,"title":{},"body":{"controllers/AuthController.html":{},"dependencies.html":{}}}],["nestjs/serve",{"_index":58,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["new",{"_index":172,"title":{},"body":{"injectables/AuthGuard.html":{},"injectables/AuthService.html":{},"coverage.html":{}}}],["node.js",{"_index":546,"title":{},"body":{"index.html":{}}}],["number",{"_index":214,"title":{},"body":{"injectables/AuthService.html":{},"classes/CreateTaskDto.html":{},"injectables/SchoolService.html":{},"interfaces/Task.html":{},"injectables/TaskService.html":{},"classes/UpdateTaskDto.html":{}}}],["object",{"_index":614,"title":{},"body":{"miscellaneous/variables.html":{}}}],["onmoduleinit",{"_index":344,"title":{},"body":{"injectables/PrismaService.html":{}}}],["open",{"_index":578,"title":{},"body":{"index.html":{}}}],["optional",{"_index":92,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthGuard.html":{},"injectables/AuthService.html":{},"classes/CreateSchoolDto.html":{},"injectables/JwtStrategy.html":{},"injectables/PrismaService.html":{},"controllers/SchoolController.html":{},"injectables/SchoolService.html":{},"controllers/TaskController.html":{},"injectables/TaskService.html":{},"classes/UpdateTaskDto.html":{}}}],["out",{"_index":50,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PrismaModule.html":{},"modules/SchoolModule.html":{},"modules/TaskModule.html":{},"overview.html":{}}}],["overview",{"_index":604,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":523,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["param",{"_index":230,"title":{},"body":{"injectables/AuthService.html":{},"controllers/SchoolController.html":{},"controllers/TaskController.html":{}}}],["parameters",{"_index":89,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/PrismaService.html":{},"controllers/SchoolController.html":{},"injectables/SchoolService.html":{},"controllers/TaskController.html":{},"injectables/TaskService.html":{}}}],["partialtype",{"_index":496,"title":{},"body":{"classes/UpdateSchoolDto.html":{}}}],["partialtype(createschooldto",{"_index":495,"title":{},"body":{"classes/UpdateSchoolDto.html":{}}}],["passport",{"_index":317,"title":{},"body":{"injectables/JwtStrategy.html":{},"dependencies.html":{}}}],["passportmodule",{"_index":180,"title":{},"body":{"modules/AuthModule.html":{}}}],["passportmodule.register",{"_index":186,"title":{},"body":{"modules/AuthModule.html":{}}}],["passportstrategy",{"_index":314,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["passportstrategy(strategy",{"_index":309,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["password",{"_index":242,"title":{},"body":{"injectables/AuthService.html":{},"classes/LoginDTO.html":{},"classes/RegisterDTO.html":{}}}],["patch",{"_index":380,"title":{},"body":{"controllers/SchoolController.html":{},"controllers/TaskController.html":{}}}],["patch(':id",{"_index":378,"title":{},"body":{"controllers/SchoolController.html":{}}}],["patch(':task_id",{"_index":455,"title":{},"body":{"controllers/TaskController.html":{}}}],["path",{"_index":61,"title":{},"body":{"modules/AppModule.html":{},"injectables/AppService.html":{}}}],["payload",{"_index":211,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{}}}],["payload.email",{"_index":324,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["payload.exp",{"_index":326,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["payload.sub",{"_index":323,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["phone",{"_index":284,"title":{},"body":{"classes/CreateSchoolDto.html":{}}}],["please",{"_index":587,"title":{},"body":{"index.html":{}}}],["post",{"_index":111,"title":{},"body":{"controllers/AuthController.html":{},"controllers/SchoolController.html":{},"controllers/TaskController.html":{}}}],["post('avatar",{"_index":149,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('login",{"_index":134,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('register",{"_index":130,"title":{},"body":{"controllers/AuthController.html":{}}}],["prefix",{"_index":78,"title":{},"body":{"controllers/AuthController.html":{},"controllers/SchoolController.html":{},"controllers/TaskController.html":{}}}],["prettier/prettier",{"_index":109,"title":{},"body":{"controllers/AuthController.html":{},"modules/PrismaModule.html":{},"controllers/SchoolController.html":{},"modules/SchoolModule.html":{},"controllers/TaskController.html":{}}}],["prisma",{"_index":206,"title":{},"body":{"injectables/AuthService.html":{},"injectables/SchoolService.html":{},"injectables/TaskService.html":{}}}],["prisma.service",{"_index":340,"title":{},"body":{"modules/PrismaModule.html":{}}}],["prisma/client",{"_index":350,"title":{},"body":{"injectables/PrismaService.html":{},"dependencies.html":{}}}],["prisma/prisma.module",{"_index":55,"title":{},"body":{"modules/AppModule.html":{}}}],["prismaclient",{"_index":342,"title":{},"body":{"injectables/PrismaService.html":{}}}],["prismamodule",{"_index":45,"title":{"modules/PrismaModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PrismaModule.html":{},"modules/SchoolModule.html":{},"modules/TaskModule.html":{},"modules.html":{},"overview.html":{}}}],["prismaservice",{"_index":203,"title":{"injectables/PrismaService.html":{}},"body":{"injectables/AuthService.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"injectables/SchoolService.html":{},"modules/TaskModule.html":{},"injectables/TaskService.html":{},"coverage.html":{},"overview.html":{}}}],["private",{"_index":229,"title":{},"body":{"injectables/AuthService.html":{},"injectables/TaskService.html":{}}}],["process.on('beforeexit",{"_index":353,"title":{},"body":{"injectables/PrismaService.html":{}}}],["production",{"_index":568,"title":{},"body":{"index.html":{}}}],["profile",{"_index":83,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["profile(@req",{"_index":139,"title":{},"body":{"controllers/AuthController.html":{}}}],["profile(req",{"_index":100,"title":{},"body":{"controllers/AuthController.html":{}}}],["profile(user_id",{"_index":213,"title":{},"body":{"injectables/AuthService.html":{}}}],["progressive",{"_index":545,"title":{},"body":{"index.html":{}}}],["project",{"_index":579,"title":{},"body":{"index.html":{}}}],["properties",{"_index":282,"title":{"properties.html":{}},"body":{"classes/CreateSchoolDto.html":{},"classes/CreateTaskDto.html":{},"classes/LoginDTO.html":{},"classes/RegisterDTO.html":{},"interfaces/Task.html":{},"classes/UpdateTaskDto.html":{},"properties.html":{}}}],["property",{"_index":189,"title":{},"body":{"modules/AuthModule.html":{}}}],["providers",{"_index":39,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PrismaModule.html":{},"modules/SchoolModule.html":{},"modules/TaskModule.html":{},"overview.html":{}}}],["public",{"_index":66,"title":{},"body":{"modules/AppModule.html":{}}}],["public/uploads/image",{"_index":144,"title":{},"body":{"controllers/AuthController.html":{}}}],["read",{"_index":588,"title":{},"body":{"index.html":{}}}],["readonly",{"_index":26,"title":{},"body":{"controllers/AppController.html":{},"controllers/SchoolController.html":{}}}],["reflect",{"_index":535,"title":{},"body":{"dependencies.html":{}}}],["register",{"_index":84,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["register(@body",{"_index":131,"title":{},"body":{"controllers/AuthController.html":{}}}],["register(data",{"_index":103,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["registerdto",{"_index":104,"title":{"classes/RegisterDTO.html":{}},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/RegisterDTO.html":{},"coverage.html":{}}}],["registered",{"_index":239,"title":{},"body":{"injectables/AuthService.html":{}}}],["remove",{"_index":365,"title":{},"body":{"controllers/SchoolController.html":{},"injectables/SchoolService.html":{}}}],["remove(@param('id",{"_index":395,"title":{},"body":{"controllers/SchoolController.html":{}}}],["remove(id",{"_index":373,"title":{},"body":{"controllers/SchoolController.html":{},"injectables/SchoolService.html":{}}}],["repository",{"_index":557,"title":{},"body":{"index.html":{}}}],["req",{"_index":93,"title":{},"body":{"controllers/AuthController.html":{},"injectables/TaskService.html":{}}}],["request",{"_index":274,"title":{},"body":{"injectables/AuthService.html":{},"injectables/TaskService.html":{}}}],["reset",{"_index":49,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PrismaModule.html":{},"modules/SchoolModule.html":{},"modules/TaskModule.html":{},"overview.html":{}}}],["results",{"_index":30,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateSchoolDto.html":{},"classes/CreateTaskDto.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDTO.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/RegisterDTO.html":{},"classes/School.html":{},"controllers/SchoolController.html":{},"modules/SchoolModule.html":{},"injectables/SchoolService.html":{},"interfaces/Task.html":{},"controllers/TaskController.html":{},"modules/TaskModule.html":{},"injectables/TaskService.html":{},"classes/UpdateSchoolDto.html":{},"classes/UpdateTaskDto.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":27,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"controllers/SchoolController.html":{},"injectables/SchoolService.html":{},"controllers/TaskController.html":{},"injectables/TaskService.html":{}}}],["returns",{"_index":15,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/PrismaService.html":{},"controllers/SchoolController.html":{},"injectables/SchoolService.html":{},"controllers/TaskController.html":{},"injectables/TaskService.html":{}}}],["rootpath",{"_index":64,"title":{},"body":{"modules/AppModule.html":{}}}],["run",{"_index":563,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":538,"title":{},"body":{"dependencies.html":{}}}],["scalable",{"_index":550,"title":{},"body":{"index.html":{}}}],["school",{"_index":359,"title":{"classes/School.html":{}},"body":{"classes/School.html":{},"controllers/SchoolController.html":{},"coverage.html":{}}}],["school.controller",{"_index":401,"title":{},"body":{"modules/SchoolModule.html":{}}}],["school.dto",{"_index":385,"title":{},"body":{"controllers/SchoolController.html":{},"injectables/SchoolService.html":{},"classes/UpdateSchoolDto.html":{}}}],["school.dto.ts",{"_index":281,"title":{},"body":{"classes/CreateSchoolDto.html":{},"classes/UpdateSchoolDto.html":{},"coverage.html":{}}}],["school.dto.ts:12",{"_index":289,"title":{},"body":{"classes/CreateSchoolDto.html":{}}}],["school.dto.ts:16",{"_index":287,"title":{},"body":{"classes/CreateSchoolDto.html":{}}}],["school.dto.ts:20",{"_index":290,"title":{},"body":{"classes/CreateSchoolDto.html":{}}}],["school.dto.ts:7",{"_index":292,"title":{},"body":{"classes/CreateSchoolDto.html":{}}}],["school.service",{"_index":383,"title":{},"body":{"controllers/SchoolController.html":{},"modules/SchoolModule.html":{}}}],["school/school.module",{"_index":62,"title":{},"body":{"modules/AppModule.html":{}}}],["school_name",{"_index":285,"title":{},"body":{"classes/CreateSchoolDto.html":{}}}],["schoolcontroller",{"_index":361,"title":{"controllers/SchoolController.html":{}},"body":{"controllers/SchoolController.html":{},"modules/SchoolModule.html":{},"coverage.html":{}}}],["schoolmodule",{"_index":46,"title":{"modules/SchoolModule.html":{}},"body":{"modules/AppModule.html":{},"modules/SchoolModule.html":{},"modules.html":{},"overview.html":{}}}],["schoolservice",{"_index":382,"title":{"injectables/SchoolService.html":{}},"body":{"controllers/SchoolController.html":{},"modules/SchoolModule.html":{},"injectables/SchoolService.html":{},"coverage.html":{},"overview.html":{}}}],["secret",{"_index":193,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"miscellaneous/variables.html":{}}}],["secretorkey",{"_index":322,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["select",{"_index":270,"title":{},"body":{"injectables/AuthService.html":{}}}],["server",{"_index":551,"title":{},"body":{"index.html":{}}}],["servestaticmodule",{"_index":57,"title":{},"body":{"modules/AppModule.html":{}}}],["servestaticmodule.forroot",{"_index":63,"title":{},"body":{"modules/AppModule.html":{}}}],["session",{"_index":190,"title":{},"body":{"modules/AuthModule.html":{}}}],["side",{"_index":552,"title":{},"body":{"index.html":{}}}],["signoptions",{"_index":195,"title":{},"body":{"modules/AuthModule.html":{}}}],["source",{"_index":4,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateSchoolDto.html":{},"classes/CreateTaskDto.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDTO.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/RegisterDTO.html":{},"classes/School.html":{},"controllers/SchoolController.html":{},"modules/SchoolModule.html":{},"injectables/SchoolService.html":{},"interfaces/Task.html":{},"controllers/TaskController.html":{},"modules/TaskModule.html":{},"injectables/TaskService.html":{},"classes/UpdateSchoolDto.html":{},"classes/UpdateTaskDto.html":{},"index.html":{}}}],["sponsors",{"_index":582,"title":{},"body":{"index.html":{}}}],["src/.../jwt_config.ts",{"_index":612,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../main.ts",{"_index":542,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../task.ts",{"_index":613,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app.controller.ts",{"_index":6,"title":{},"body":{"controllers/AppController.html":{},"coverage.html":{}}}],["src/app.controller.ts:14",{"_index":18,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app.controller.ts:9",{"_index":14,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app.module.ts",{"_index":51,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app.service.ts",{"_index":69,"title":{},"body":{"injectables/AppService.html":{},"coverage.html":{}}}],["src/app.service.ts:5",{"_index":70,"title":{},"body":{"injectables/AppService.html":{}}}],["src/app.service.ts:9",{"_index":71,"title":{},"body":{"injectables/AppService.html":{}}}],["src/auth/auth.controller.ts",{"_index":77,"title":{},"body":{"controllers/AuthController.html":{},"coverage.html":{}}}],["src/auth/auth.controller.ts:27",{"_index":106,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.controller.ts:33",{"_index":98,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.controller.ts:39",{"_index":102,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.controller.ts:53",{"_index":88,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.guard",{"_index":447,"title":{},"body":{"controllers/TaskController.html":{}}}],["src/auth/auth.guard.ts",{"_index":154,"title":{},"body":{"injectables/AuthGuard.html":{},"coverage.html":{}}}],["src/auth/auth.guard.ts:11",{"_index":165,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["src/auth/auth.guard.ts:7",{"_index":161,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["src/auth/auth.module.ts",{"_index":177,"title":{},"body":{"modules/AuthModule.html":{}}}],["src/auth/auth.service.ts",{"_index":198,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{}}}],["src/auth/auth.service.ts:11",{"_index":205,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:116",{"_index":220,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:19",{"_index":208,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:31",{"_index":218,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:62",{"_index":212,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:91",{"_index":215,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/dto/login.dto.ts",{"_index":327,"title":{},"body":{"classes/LoginDTO.html":{},"coverage.html":{}}}],["src/auth/dto/login.dto.ts:13",{"_index":331,"title":{},"body":{"classes/LoginDTO.html":{}}}],["src/auth/dto/login.dto.ts:7",{"_index":329,"title":{},"body":{"classes/LoginDTO.html":{}}}],["src/auth/dto/register.dto.ts",{"_index":355,"title":{},"body":{"classes/RegisterDTO.html":{},"coverage.html":{}}}],["src/auth/dto/register.dto.ts:11",{"_index":356,"title":{},"body":{"classes/RegisterDTO.html":{}}}],["src/auth/dto/register.dto.ts:17",{"_index":358,"title":{},"body":{"classes/RegisterDTO.html":{}}}],["src/auth/dto/register.dto.ts:7",{"_index":357,"title":{},"body":{"classes/RegisterDTO.html":{}}}],["src/auth/jwt.strategy.ts",{"_index":308,"title":{},"body":{"injectables/JwtStrategy.html":{},"coverage.html":{}}}],["src/auth/jwt.strategy.ts:17",{"_index":313,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["src/auth/jwt.strategy.ts:8",{"_index":311,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["src/config/jwt_config",{"_index":184,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{}}}],["src/config/jwt_config.ts",{"_index":514,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/main.ts",{"_index":517,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/prisma/prisma.module",{"_index":179,"title":{},"body":{"modules/AuthModule.html":{},"modules/SchoolModule.html":{},"modules/TaskModule.html":{}}}],["src/prisma/prisma.module.ts",{"_index":339,"title":{},"body":{"modules/PrismaModule.html":{}}}],["src/prisma/prisma.service",{"_index":225,"title":{},"body":{"injectables/AuthService.html":{},"injectables/SchoolService.html":{},"modules/TaskModule.html":{},"injectables/TaskService.html":{}}}],["src/prisma/prisma.service.ts",{"_index":341,"title":{},"body":{"injectables/PrismaService.html":{},"coverage.html":{}}}],["src/prisma/prisma.service.ts:11",{"_index":347,"title":{},"body":{"injectables/PrismaService.html":{}}}],["src/prisma/prisma.service.ts:7",{"_index":349,"title":{},"body":{"injectables/PrismaService.html":{}}}],["src/school/dto/create",{"_index":280,"title":{},"body":{"classes/CreateSchoolDto.html":{},"coverage.html":{}}}],["src/school/dto/update",{"_index":494,"title":{},"body":{"classes/UpdateSchoolDto.html":{},"coverage.html":{}}}],["src/school/entities/school.entity.ts",{"_index":360,"title":{},"body":{"classes/School.html":{},"coverage.html":{}}}],["src/school/school.controller.ts",{"_index":362,"title":{},"body":{"controllers/SchoolController.html":{},"coverage.html":{}}}],["src/school/school.controller.ts:12",{"_index":368,"title":{},"body":{"controllers/SchoolController.html":{}}}],["src/school/school.controller.ts:17",{"_index":369,"title":{},"body":{"controllers/SchoolController.html":{}}}],["src/school/school.controller.ts:22",{"_index":372,"title":{},"body":{"controllers/SchoolController.html":{}}}],["src/school/school.controller.ts:27",{"_index":379,"title":{},"body":{"controllers/SchoolController.html":{}}}],["src/school/school.controller.ts:32",{"_index":375,"title":{},"body":{"controllers/SchoolController.html":{}}}],["src/school/school.module.ts",{"_index":400,"title":{},"body":{"modules/SchoolModule.html":{}}}],["src/school/school.service.ts",{"_index":402,"title":{},"body":{"injectables/SchoolService.html":{},"coverage.html":{}}}],["src/school/school.service.ts:11",{"_index":404,"title":{},"body":{"injectables/SchoolService.html":{}}}],["src/school/school.service.ts:17",{"_index":405,"title":{},"body":{"injectables/SchoolService.html":{}}}],["src/school/school.service.ts:21",{"_index":406,"title":{},"body":{"injectables/SchoolService.html":{}}}],["src/school/school.service.ts:30",{"_index":408,"title":{},"body":{"injectables/SchoolService.html":{}}}],["src/school/school.service.ts:39",{"_index":407,"title":{},"body":{"injectables/SchoolService.html":{}}}],["src/school/school.service.ts:8",{"_index":403,"title":{},"body":{"injectables/SchoolService.html":{}}}],["src/task/data/task.ts",{"_index":417,"title":{},"body":{"interfaces/Task.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/task/dto/create",{"_index":299,"title":{},"body":{"classes/CreateTaskDto.html":{},"coverage.html":{}}}],["src/task/dto/update",{"_index":499,"title":{},"body":{"classes/UpdateTaskDto.html":{},"coverage.html":{}}}],["src/task/task.controller.ts",{"_index":423,"title":{},"body":{"controllers/TaskController.html":{},"coverage.html":{}}}],["src/task/task.controller.ts:26",{"_index":431,"title":{},"body":{"controllers/TaskController.html":{}}}],["src/task/task.controller.ts:32",{"_index":436,"title":{},"body":{"controllers/TaskController.html":{}}}],["src/task/task.controller.ts:38",{"_index":439,"title":{},"body":{"controllers/TaskController.html":{}}}],["src/task/task.controller.ts:45",{"_index":443,"title":{},"body":{"controllers/TaskController.html":{}}}],["src/task/task.controller.ts:51",{"_index":434,"title":{},"body":{"controllers/TaskController.html":{}}}],["src/task/task.module.ts",{"_index":464,"title":{},"body":{"modules/TaskModule.html":{}}}],["src/task/task.service.ts",{"_index":466,"title":{},"body":{"injectables/TaskService.html":{},"coverage.html":{}}}],["src/task/task.service.ts:15",{"_index":471,"title":{},"body":{"injectables/TaskService.html":{}}}],["src/task/task.service.ts:26",{"_index":474,"title":{},"body":{"injectables/TaskService.html":{}}}],["src/task/task.service.ts:38",{"_index":475,"title":{},"body":{"injectables/TaskService.html":{}}}],["src/task/task.service.ts:52",{"_index":476,"title":{},"body":{"injectables/TaskService.html":{}}}],["src/task/task.service.ts:66",{"_index":473,"title":{},"body":{"injectables/TaskService.html":{}}}],["src/task/task.service.ts:9",{"_index":469,"title":{},"body":{"injectables/TaskService.html":{}}}],["start",{"_index":564,"title":{},"body":{"index.html":{}}}],["start:dev",{"_index":567,"title":{},"body":{"index.html":{}}}],["start:prodtest",{"_index":569,"title":{},"body":{"index.html":{}}}],["started",{"_index":544,"title":{"index.html":{}},"body":{}}],["starter",{"_index":556,"title":{},"body":{"index.html":{}}}],["statements",{"_index":507,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":59,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["statuscode",{"_index":249,"title":{},"body":{"injectables/AuthService.html":{},"injectables/TaskService.html":{}}}],["stay",{"_index":591,"title":{},"body":{"index.html":{}}}],["storage",{"_index":142,"title":{},"body":{"controllers/AuthController.html":{}}}],["strategy",{"_index":316,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["string",{"_index":16,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"classes/CreateSchoolDto.html":{},"classes/CreateTaskDto.html":{},"classes/LoginDTO.html":{},"classes/RegisterDTO.html":{},"controllers/SchoolController.html":{},"interfaces/Task.html":{},"classes/UpdateTaskDto.html":{}}}],["sub",{"_index":264,"title":{},"body":{"injectables/AuthService.html":{}}}],["successfully",{"_index":252,"title":{},"body":{"injectables/AuthService.html":{}}}],["sucessfully",{"_index":492,"title":{},"body":{"injectables/TaskService.html":{}}}],["super",{"_index":318,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["super.canactivate(context",{"_index":170,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["support",{"_index":583,"title":{},"body":{"index.html":{},"modules.html":{}}}],["svg",{"_index":602,"title":{},"body":{"modules.html":{}}}],["table",{"_index":522,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":521,"title":{},"body":{"coverage.html":{}}}],["task",{"_index":415,"title":{"interfaces/Task.html":{}},"body":{"interfaces/Task.html":{},"controllers/TaskController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["task.controller",{"_index":465,"title":{},"body":{"modules/TaskModule.html":{}}}],["task.dto",{"_index":446,"title":{},"body":{"controllers/TaskController.html":{},"injectables/TaskService.html":{}}}],["task.dto.ts",{"_index":300,"title":{},"body":{"classes/CreateTaskDto.html":{},"classes/UpdateTaskDto.html":{},"coverage.html":{}}}],["task.dto.ts:11",{"_index":306,"title":{},"body":{"classes/CreateTaskDto.html":{}}}],["task.dto.ts:12",{"_index":501,"title":{},"body":{"classes/UpdateTaskDto.html":{}}}],["task.dto.ts:13",{"_index":304,"title":{},"body":{"classes/CreateTaskDto.html":{}}}],["task.dto.ts:14",{"_index":500,"title":{},"body":{"classes/UpdateTaskDto.html":{}}}],["task.dto.ts:7",{"_index":307,"title":{},"body":{"classes/CreateTaskDto.html":{}}}],["task.dto.ts:8",{"_index":503,"title":{},"body":{"classes/UpdateTaskDto.html":{}}}],["task.service",{"_index":445,"title":{},"body":{"controllers/TaskController.html":{},"modules/TaskModule.html":{}}}],["task/task.module",{"_index":54,"title":{},"body":{"modules/AppModule.html":{}}}],["task_description",{"_index":302,"title":{},"body":{"classes/CreateTaskDto.html":{},"interfaces/Task.html":{},"classes/UpdateTaskDto.html":{},"miscellaneous/variables.html":{}}}],["task_id",{"_index":418,"title":{},"body":{"interfaces/Task.html":{},"controllers/TaskController.html":{},"injectables/TaskService.html":{},"miscellaneous/variables.html":{}}}],["task_name",{"_index":303,"title":{},"body":{"classes/CreateTaskDto.html":{},"interfaces/Task.html":{},"classes/UpdateTaskDto.html":{},"miscellaneous/variables.html":{}}}],["taskcontroller",{"_index":422,"title":{"controllers/TaskController.html":{}},"body":{"controllers/TaskController.html":{},"modules/TaskModule.html":{},"coverage.html":{}}}],["taskmodule",{"_index":47,"title":{"modules/TaskModule.html":{}},"body":{"modules/AppModule.html":{},"modules/TaskModule.html":{},"modules.html":{},"overview.html":{}}}],["tasks",{"_index":272,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Task.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["taskservice",{"_index":444,"title":{"injectables/TaskService.html":{}},"body":{"controllers/TaskController.html":{},"modules/TaskModule.html":{},"injectables/TaskService.html":{},"coverage.html":{},"overview.html":{}}}],["test",{"_index":572,"title":{},"body":{"index.html":{}}}],["test:covsupport",{"_index":575,"title":{},"body":{"index.html":{}}}],["test:e2e",{"_index":574,"title":{},"body":{"index.html":{}}}],["tests",{"_index":571,"title":{},"body":{"index.html":{}}}],["thanks",{"_index":581,"title":{},"body":{"index.html":{}}}],["this.$connect",{"_index":352,"title":{},"body":{"injectables/PrismaService.html":{}}}],["this.appservice.gethello",{"_index":28,"title":{},"body":{"controllers/AppController.html":{}}}],["this.appservice.gethello2",{"_index":29,"title":{},"body":{"controllers/AppController.html":{}}}],["this.authservice.login(data",{"_index":136,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.authservice.profile(req.user.id",{"_index":140,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.authservice.register(data",{"_index":133,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.authservice.uploadavatar(req.user.id",{"_index":151,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.generatejwt",{"_index":263,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.jwtservice.sign(payload",{"_index":231,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.prisma.schools.create",{"_index":409,"title":{},"body":{"injectables/SchoolService.html":{}}}],["this.prisma.schools.delete",{"_index":413,"title":{},"body":{"injectables/SchoolService.html":{}}}],["this.prisma.schools.findfirst",{"_index":411,"title":{},"body":{"injectables/SchoolService.html":{}}}],["this.prisma.schools.findmany",{"_index":410,"title":{},"body":{"injectables/SchoolService.html":{}}}],["this.prisma.schools.update",{"_index":412,"title":{},"body":{"injectables/SchoolService.html":{}}}],["this.prisma.tasks.create",{"_index":483,"title":{},"body":{"injectables/TaskService.html":{}}}],["this.prisma.tasks.delete",{"_index":491,"title":{},"body":{"injectables/TaskService.html":{}}}],["this.prisma.tasks.findfirst",{"_index":487,"title":{},"body":{"injectables/TaskService.html":{}}}],["this.prisma.tasks.findmany",{"_index":486,"title":{},"body":{"injectables/TaskService.html":{}}}],["this.prisma.tasks.update",{"_index":489,"title":{},"body":{"injectables/TaskService.html":{}}}],["this.prisma.users.create",{"_index":248,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.prisma.users.findfirst",{"_index":234,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.prisma.users.update",{"_index":276,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.req.user.id",{"_index":481,"title":{},"body":{"injectables/TaskService.html":{}}}],["this.schoolservice.create(createschooldto",{"_index":389,"title":{},"body":{"controllers/SchoolController.html":{}}}],["this.schoolservice.findall",{"_index":390,"title":{},"body":{"controllers/SchoolController.html":{}}}],["this.schoolservice.findone(+id",{"_index":392,"title":{},"body":{"controllers/SchoolController.html":{}}}],["this.schoolservice.remove(+id",{"_index":396,"title":{},"body":{"controllers/SchoolController.html":{}}}],["this.schoolservice.update(+id",{"_index":394,"title":{},"body":{"controllers/SchoolController.html":{}}}],["this.taskservice.createtask(body",{"_index":450,"title":{},"body":{"controllers/TaskController.html":{}}}],["this.taskservice.delettaskbyid(+task_id",{"_index":460,"title":{},"body":{"controllers/TaskController.html":{}}}],["this.taskservice.getalltask",{"_index":451,"title":{},"body":{"controllers/TaskController.html":{}}}],["this.taskservice.gettaskbyid(+task_id",{"_index":454,"title":{},"body":{"controllers/TaskController.html":{}}}],["this.taskservice.updatetaskbyid(+task_id",{"_index":457,"title":{},"body":{"controllers/TaskController.html":{}}}],["throw",{"_index":171,"title":{},"body":{"injectables/AuthGuard.html":{},"injectables/AuthService.html":{}}}],["token",{"_index":210,"title":{},"body":{"injectables/AuthService.html":{}}}],["touch",{"_index":592,"title":{},"body":{"index.html":{}}}],["transformer",{"_index":530,"title":{},"body":{"dependencies.html":{}}}],["true",{"_index":271,"title":{},"body":{"injectables/AuthService.html":{}}}],["twitter",{"_index":598,"title":{},"body":{"index.html":{}}}],["type",{"_index":91,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthGuard.html":{},"injectables/AuthService.html":{},"classes/CreateSchoolDto.html":{},"classes/CreateTaskDto.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDTO.html":{},"injectables/PrismaService.html":{},"classes/RegisterDTO.html":{},"controllers/SchoolController.html":{},"injectables/SchoolService.html":{},"interfaces/Task.html":{},"controllers/TaskController.html":{},"injectables/TaskService.html":{},"classes/UpdateTaskDto.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["types",{"_index":498,"title":{},"body":{"classes/UpdateSchoolDto.html":{},"dependencies.html":{}}}],["typescript",{"_index":555,"title":{},"body":{"index.html":{}}}],["unauthorizedexception",{"_index":167,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["unit",{"_index":570,"title":{},"body":{"index.html":{}}}],["unknown",{"_index":94,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"controllers/SchoolController.html":{},"injectables/SchoolService.html":{},"controllers/TaskController.html":{},"injectables/TaskService.html":{}}}],["unlicensed",{"_index":610,"title":{},"body":{"properties.html":{}}}],["update",{"_index":366,"title":{},"body":{"controllers/SchoolController.html":{},"injectables/SchoolService.html":{}}}],["update(@param('id",{"_index":393,"title":{},"body":{"controllers/SchoolController.html":{}}}],["update(id",{"_index":376,"title":{},"body":{"controllers/SchoolController.html":{},"injectables/SchoolService.html":{}}}],["updatedata",{"_index":488,"title":{},"body":{"injectables/TaskService.html":{}}}],["updateschooldto",{"_index":377,"title":{"classes/UpdateSchoolDto.html":{}},"body":{"controllers/SchoolController.html":{},"injectables/SchoolService.html":{},"classes/UpdateSchoolDto.html":{},"coverage.html":{}}}],["updatetaskbyid",{"_index":428,"title":{},"body":{"controllers/TaskController.html":{},"injectables/TaskService.html":{}}}],["updatetaskbyid(@param('task_id",{"_index":456,"title":{},"body":{"controllers/TaskController.html":{}}}],["updatetaskbyid(task_id",{"_index":440,"title":{},"body":{"controllers/TaskController.html":{},"injectables/TaskService.html":{}}}],["updatetaskdto",{"_index":441,"title":{"classes/UpdateTaskDto.html":{}},"body":{"controllers/TaskController.html":{},"injectables/TaskService.html":{},"classes/UpdateTaskDto.html":{},"coverage.html":{}}}],["upload",{"_index":221,"title":{},"body":{"injectables/AuthService.html":{}}}],["uploadavatar",{"_index":200,"title":{},"body":{"injectables/AuthService.html":{}}}],["uploadavatar(user_id",{"_index":219,"title":{},"body":{"injectables/AuthService.html":{}}}],["uploadedfile",{"_index":112,"title":{},"body":{"controllers/AuthController.html":{}}}],["uploads/image",{"_index":152,"title":{},"body":{"controllers/AuthController.html":{}}}],["useguards",{"_index":113,"title":{},"body":{"controllers/AuthController.html":{},"controllers/TaskController.html":{}}}],["useguards(authguard",{"_index":137,"title":{},"body":{"controllers/AuthController.html":{},"controllers/TaskController.html":{}}}],["useguards(authguard)@delete(':task_id",{"_index":433,"title":{},"body":{"controllers/TaskController.html":{}}}],["useguards(authguard)@get",{"_index":435,"title":{},"body":{"controllers/TaskController.html":{}}}],["useguards(authguard)@get(':task_id",{"_index":438,"title":{},"body":{"controllers/TaskController.html":{}}}],["useguards(authguard)@get('profile",{"_index":101,"title":{},"body":{"controllers/AuthController.html":{}}}],["useguards(authguard)@useinterceptors(undefined)@post('avatar",{"_index":87,"title":{},"body":{"controllers/AuthController.html":{}}}],["useguards(authguard)@usepipes(validationpipe)@patch(':task_id",{"_index":442,"title":{},"body":{"controllers/TaskController.html":{}}}],["useguards(authguard)@usepipes(validationpipe)@post",{"_index":430,"title":{},"body":{"controllers/TaskController.html":{}}}],["useinterceptors",{"_index":114,"title":{},"body":{"controllers/AuthController.html":{}}}],["useinterceptors(fileinterceptor('avatar",{"_index":141,"title":{},"body":{"controllers/AuthController.html":{}}}],["usepipes",{"_index":115,"title":{},"body":{"controllers/AuthController.html":{},"controllers/TaskController.html":{}}}],["usepipes(validationpipe",{"_index":129,"title":{},"body":{"controllers/AuthController.html":{},"controllers/TaskController.html":{}}}],["usepipes(validationpipe)@post('login",{"_index":97,"title":{},"body":{"controllers/AuthController.html":{}}}],["usepipes(validationpipe)@post('register",{"_index":105,"title":{},"body":{"controllers/AuthController.html":{}}}],["user",{"_index":164,"title":{},"body":{"injectables/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{}}}],["user_id",{"_index":217,"title":{},"body":{"injectables/AuthService.html":{}}}],["validate",{"_index":310,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["validate(payload",{"_index":312,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["validationpipe",{"_index":116,"title":{},"body":{"controllers/AuthController.html":{},"controllers/TaskController.html":{}}}],["validator",{"_index":297,"title":{},"body":{"classes/CreateSchoolDto.html":{},"classes/CreateTaskDto.html":{},"classes/LoginDTO.html":{},"classes/RegisterDTO.html":{},"classes/UpdateTaskDto.html":{},"dependencies.html":{}}}],["value",{"_index":616,"title":{},"body":{"miscellaneous/variables.html":{}}}],["variable",{"_index":515,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":611,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["version",{"_index":608,"title":{},"body":{"properties.html":{}}}],["watch",{"_index":565,"title":{},"body":{"index.html":{}}}],["website",{"_index":596,"title":{},"body":{"index.html":{}}}],["world",{"_index":73,"title":{},"body":{"injectables/AppService.html":{}}}],["yarn",{"_index":560,"title":{},"body":{"index.html":{}}}],["you'd",{"_index":586,"title":{},"body":{"index.html":{}}}],["zoom",{"_index":48,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PrismaModule.html":{},"modules/SchoolModule.html":{},"modules/TaskModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"controllers/AppController.html":{"url":"controllers/AppController.html","title":"controller - AppController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AppController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                getHello\n                            \n                            \n                                    \n                                getHello2\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        getHello\n                        \n                    \n                \n            \n            \n                \n                        \n                    getHello()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n                    \n                        \n                            Defined in src/app.controller.ts:9\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        getHello2\n                        \n                    \n                \n            \n            \n                \n                        \n                    getHello2()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/path2')\n                \n            \n\n                    \n                        \n                            Defined in src/app.controller.ts:14\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get } from '@nestjs/common';\nimport { AppService } from './app.service';\n\n@Controller()\nexport class AppController {\n  constructor(private readonly appService: AppService) {}\n\n  @Get()\n  getHello(): string {\n    return this.appService.getHello();\n  }\n\n  @Get('/path2')\n  getHello2(): string {\n    return this.appService.getHello2();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AppModule_imports\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nPrismaModule\n\nPrismaModule\n\nAppModule -->\n\nPrismaModule->AppModule\n\n\n\n\n\nSchoolModule\n\nSchoolModule\n\nAppModule -->\n\nSchoolModule->AppModule\n\n\n\n\n\nTaskModule\n\nTaskModule\n\nAppModule -->\n\nTaskModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AppService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AppController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AuthModule\n                        \n                        \n                            PrismaModule\n                        \n                        \n                            SchoolModule\n                        \n                        \n                            TaskModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { AppController } from './app.controller';\nimport { AppService } from './app.service';\nimport { TaskModule } from './task/task.module';\nimport { PrismaModule } from './prisma/prisma.module';\nimport { AuthModule } from './auth/auth.module';\nimport { ServeStaticModule } from '@nestjs/serve-static';\nimport { join } from 'path';\nimport { SchoolModule } from './school/school.module';\n\n@Module({\n  imports: [\n    ServeStaticModule.forRoot({\n      rootPath: join(__dirname, '..', 'public'),\n    }),\n    TaskModule,\n    PrismaModule,\n    AuthModule,\n    SchoolModule,\n  ],\n  controllers: [AppController],\n  providers: [AppService],\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AppService.html":{"url":"injectables/AppService.html","title":"injectable - AppService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AppService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                            \n                                getHello2\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getHello\n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app.service.ts:5\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getHello2\n                        \n                    \n                \n            \n            \n                \ngetHello2()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app.service.ts:9\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class AppService {\n  getHello(): string {\n    return 'Hello World!';\n  }\n\n  getHello2(): string {\n    return 'Path ke 2';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AuthController.html":{"url":"controllers/AuthController.html","title":"controller - AuthController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AuthController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/auth.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                auth\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    Async\n                                avatar\n                            \n                            \n                                    \n                                    \n                                    Async\n                                login\n                            \n                            \n                                    \n                                    \n                                    Async\n                                profile\n                            \n                            \n                                    \n                                    \n                                    Async\n                                register\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Async\n                        avatar\n                        \n                    \n                \n            \n            \n                \n                        \n                    avatar(req, file: Express.Multer.File)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(AuthGuard)@UseInterceptors(undefined)@Post('avatar')\n                \n            \n\n                    \n                        \n                            Defined in src/auth/auth.controller.ts:53\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                req\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                file\n                                            \n                                                        Express.Multer.File\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Async\n                        login\n                        \n                    \n                \n            \n            \n                \n                        \n                    login(data: LoginDTO)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UsePipes(ValidationPipe)@Post('login')\n                \n            \n\n                    \n                        \n                            Defined in src/auth/auth.controller.ts:33\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            LoginDTO\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Async\n                        profile\n                        \n                    \n                \n            \n            \n                \n                        \n                    profile(req)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(AuthGuard)@Get('profile')\n                \n            \n\n                    \n                        \n                            Defined in src/auth/auth.controller.ts:39\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                req\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Async\n                        register\n                        \n                    \n                \n            \n            \n                \n                        \n                    register(data: RegisterDTO)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UsePipes(ValidationPipe)@Post('register')\n                \n            \n\n                    \n                        \n                            Defined in src/auth/auth.controller.ts:27\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            RegisterDTO\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        /* eslint-disable prettier/prettier */\nimport {\n    Body,\n    Controller,\n    Get,\n    Post,\n    Req,\n    UploadedFile,\n    UseGuards,\n    UseInterceptors,\n    UsePipes,\n    ValidationPipe\n} from '@nestjs/common';\nimport { AuthService } from './auth.service';\nimport { RegisterDTO } from './dto/Register.dto';\nimport { LoginDTO } from './dto/Login.dto';\nimport { AuthGuard } from './auth.guard';\nimport { FileInterceptor } from '@nestjs/platform-express';\nimport { diskStorage } from 'multer';\n\n@Controller('auth')\nexport class AuthController {\n    constructor(private authService: AuthService) { }\n\n    @UsePipes(ValidationPipe)\n    @Post('register')\n    async register(@Body() data: RegisterDTO) {\n        return await this.authService.register(data)\n    }\n\n    @UsePipes(ValidationPipe)\n    @Post('login')\n    async login(@Body() data: LoginDTO) {\n        return await this.authService.login(data)\n    }\n\n    @UseGuards(AuthGuard)\n    @Get('profile')\n    async profile(@Req() req) {\n        return await this.authService.profile(req.user.id)\n    }\n\n    @UseGuards(AuthGuard)\n    @UseInterceptors(FileInterceptor('avatar', {\n        storage: diskStorage({\n            destination: 'public/uploads/image',\n            filename: (req, file, cb) => {\n                cb(null, file.originalname)\n            }\n        })\n    }))\n    @Post('avatar')\n    async avatar(@Req() req, @UploadedFile() file: Express.Multer.File) {\n        return await this.authService.uploadAvatar(req.user.id, '/uploads/image/' + file.filename)\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthGuard.html":{"url":"injectables/AuthGuard.html","title":"injectable - AuthGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/auth.guard.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            AuthGuardPassport('jwt')\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                            \n                                handleRequest\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        canActivate\n                        \n                    \n                \n            \n            \n                \ncanActivate(context: ExecutionContext)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/auth.guard.ts:7\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                context\n                                            \n                                                        ExecutionContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        handleRequest\n                        \n                    \n                \n            \n            \n                \nhandleRequest(err, user)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/auth.guard.ts:11\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                err\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { ExecutionContext, Injectable, UnauthorizedException } from '@nestjs/common';\nimport { AuthGuard as AuthGuardPassport } from '@nestjs/passport'\n\n@Injectable()\nexport class AuthGuard extends AuthGuardPassport('jwt') {\n  canActivate(context: ExecutionContext) {\n    return super.canActivate(context);\n  }\n\n  handleRequest(err, user,) {\n    if (err || !user) {\n      throw err || new UnauthorizedException();\n    }\n    return user;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthModule.html":{"url":"modules/AuthModule.html","title":"module - AuthModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_imports\n\n\n\ncluster_AuthModule_providers\n\n\n\n\nPrismaModule\n\nPrismaModule\n\n\n\nAuthModule\n\nAuthModule\n\nAuthModule -->\n\nPrismaModule->AuthModule\n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\nAuthModule -->\n\nJwtStrategy->AuthModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/auth/auth.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AuthService\n                        \n                        \n                            JwtStrategy\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AuthController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            PrismaModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { AuthController } from './auth.controller';\nimport { AuthService } from './auth.service';\nimport { PrismaModule } from 'src/prisma/prisma.module';\nimport { PassportModule } from '@nestjs/passport';\nimport { JwtModule } from '@nestjs/jwt';\nimport { jwt_config } from 'src/config/jwt_config';\nimport { JwtStrategy } from './jwt.strategy';\n\n@Module({\n  imports: [\n    PrismaModule,\n    PassportModule.register({\n      defaultStrategy: 'jwt',\n      property: 'user',\n      session: false,\n    }),\n    JwtModule.register({\n      secret: jwt_config.secret,\n      signOptions: {\n        expiresIn: jwt_config.expired,\n      },\n    }),\n  ],\n  controllers: [AuthController],\n  providers: [AuthService, JwtStrategy],\n})\nexport class AuthModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/auth.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                generateJWT\n                            \n                            \n                                    Async\n                                login\n                            \n                            \n                                    Async\n                                profile\n                            \n                            \n                                    Async\n                                register\n                            \n                            \n                                    Async\n                                uploadAvatar\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(prisma: PrismaService, jwtService: JwtService)\n                    \n                \n                        \n                            \n                                Defined in src/auth/auth.service.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        prisma\n                                                  \n                                                        \n                                                                        PrismaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        jwtService\n                                                  \n                                                        \n                                                                    JwtService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        generateJWT\n                        \n                    \n                \n            \n            \n                \ngenerateJWT(payload: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/auth.service.ts:19\n                        \n                    \n\n\n            \n                \n                        Generate JWT Token\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                payload\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        login\n                        \n                    \n                \n            \n            \n                \n                        \n                    login(data: LoginDTO)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/auth.service.ts:62\n                        \n                    \n\n\n            \n                \n                        Login User\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            LoginDTO\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        profile\n                        \n                    \n                \n            \n            \n                \n                        \n                    profile(user_id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/auth.service.ts:91\n                        \n                    \n\n\n            \n                \n                        User Detail\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                user_id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        register\n                        \n                    \n                \n            \n            \n                \n                        \n                    register(data: RegisterDTO)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/auth.service.ts:31\n                        \n                    \n\n\n            \n                \n                        Register New User\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            RegisterDTO\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        uploadAvatar\n                        \n                    \n                \n            \n            \n                \n                        \n                    uploadAvatar(user_id: number, avatar)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/auth.service.ts:116\n                        \n                    \n\n\n            \n                \n                        Upload Avatar\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                user_id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                avatar\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { HttpException, HttpStatus, Injectable } from '@nestjs/common';\nimport { JwtService } from '@nestjs/jwt/dist';\nimport { jwt_config } from 'src/config/jwt_config';\nimport { PrismaService } from 'src/prisma/prisma.service';\nimport { RegisterDTO } from './dto/Register.dto';\nimport { compare, hash } from 'bcrypt';\nimport { LoginDTO } from './dto/Login.dto';\n\n@Injectable()\nexport class AuthService {\n    constructor(private prisma: PrismaService, private jwtService: JwtService) { }\n\n    /**\n     * Generate JWT Token\n     * @param payload\n     * @returns\n     */\n    generateJWT(payload: any) {\n        return this.jwtService.sign(payload, {\n            secret: jwt_config.secret,\n            expiresIn: jwt_config.expired\n        })\n    }\n\n    /**\n     * Register New User\n     * @param data\n     * @returns\n     */\n    async register(data: RegisterDTO) {\n        const checkUserExists = await this.prisma.users.findFirst({\n            where: {\n                email: data.email\n            }\n        })\n\n        if (checkUserExists) {\n            throw new HttpException('User already registered', HttpStatus.FOUND);\n        }\n\n        // Hashing Password\n        data.password = await hash(data.password, 12);\n\n        // Create Data\n        const createUser = await this.prisma.users.create({\n            data: data\n        })\n\n        if (createUser) {\n            return {\n                statusCode: 200,\n                message: 'Register Successfully'\n            }\n        }\n    }\n\n    /**\n     * Login User\n     * @param data\n     */\n    async login(data: LoginDTO) {\n        const existingUser = await this.prisma.users.findFirst({ where: { email: data.email } });\n        if (!existingUser) {\n            throw new HttpException('User not found', HttpStatus.NOT_FOUND);\n        }\n\n        const isValidPassword = await compare(data.password, existingUser.password);\n        if (!isValidPassword) {\n            throw new HttpException('Invalid Credentials', HttpStatus.UNAUTHORIZED)\n        }\n\n        const accessToken = this.generateJWT({\n            sub: existingUser.id,\n            name: existingUser.name,\n            email: existingUser.email\n        })\n\n        return {\n            statusCode: 200,\n            message: 'Login Successfully',\n            accessToken\n        }\n    }\n\n    /**\n     * User Detail\n     * @param user_id\n     * @returns\n     */\n    async profile(user_id: number) {\n        console.log(user_id);\n        const user = await this.prisma.users.findFirst({\n            where: {\n                id: user_id\n            },\n            select: {\n                name: true,\n                email: true,\n                avatar: true,\n                tasks: true,\n            }\n        })\n        return {\n            statusCode: 200,\n            data: user\n        }\n    }\n\n    /**\n     * Upload Avatar\n     * @param user_id\n     * @param avatar\n     * @returns\n     */\n    async uploadAvatar(user_id: number, avatar) {\n        const existingUser = await this.prisma.users.findFirst({\n            where: {\n                id: user_id\n            }\n        })\n\n        if (!existingUser) {\n            throw new HttpException('Bad Request', HttpStatus.BAD_REQUEST)\n        };\n\n        await this.prisma.users.update({\n            data: {\n                avatar: avatar\n            },\n            where: {\n                id: user_id\n            }\n        })\n\n        return {\n            statusCode: 200,\n            message: 'Upload avatar berhasil'\n        }\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateSchoolDto.html":{"url":"classes/CreateSchoolDto.html","title":"class - CreateSchoolDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateSchoolDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/school/dto/create-school.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    Optional\n                                address\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                email\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                phone\n                            \n                            \n                                    \n                                    \n                                school_name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        address\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/school/dto/create-school.dto.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsOptional()@IsEmail()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/school/dto/create-school.dto.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        phone\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/school/dto/create-school.dto.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        school_name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/school/dto/create-school.dto.ts:7\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsEmail, IsNotEmpty, IsOptional, IsString } from \"class-validator\";\n\nexport class CreateSchoolDto {\n    @IsString()\n    @IsNotEmpty()\n    school_name: string;\n\n    @IsString()\n    @IsOptional()\n    @IsEmail()\n    email?: string;\n\n    @IsString()\n    @IsOptional()\n    address?: string;\n\n    @IsString()\n    @IsOptional()\n    phone?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateTaskDto.html":{"url":"classes/CreateTaskDto.html","title":"class - CreateTaskDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateTaskDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/task/dto/create-task.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                id_user\n                            \n                            \n                                    \n                                    \n                                task_description\n                            \n                            \n                                    \n                                    \n                                task_name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        id_user\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/task/dto/create-task.dto.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        task_description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/task/dto/create-task.dto.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        task_name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/task/dto/create-task.dto.ts:7\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsString, IsNotEmpty } from \"class-validator\";\n\nexport class CreateTaskDto {\n    @IsString()\n    @IsNotEmpty()\n    task_name: string;\n\n    @IsNotEmpty()\n    @IsString()\n    task_description: string;\n\n    id_user: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JwtStrategy.html":{"url":"injectables/JwtStrategy.html","title":"injectable - JwtStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  JwtStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/jwt.strategy.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        PassportStrategy(Strategy, 'jwt')\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/auth/jwt.strategy.ts:8\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        validate\n                        \n                    \n                \n            \n            \n                \n                        \n                    validate(payload: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/jwt.strategy.ts:17\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                payload\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { PassportStrategy } from '@nestjs/passport';\nimport {ExtractJwt, Strategy} from 'passport-jwt';\nimport { jwt_config } from 'src/config/jwt_config';\n\n@Injectable()\nexport class JwtStrategy extends PassportStrategy(Strategy, 'jwt') {\n    constructor() {\n        super({\n            jwtFromRequest: ExtractJwt.fromAuthHeaderAsBearerToken(),\n            ignoreExpiration: false,\n            secretOrKey: jwt_config.secret\n        })\n    }\n    \n    async validate(payload: any) {\n        return {\n            id: payload.sub,\n            email: payload.email,\n            expired: payload.exp\n        }\n    }\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoginDTO.html":{"url":"classes/LoginDTO.html","title":"class - LoginDTO","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoginDTO\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/dto/Login.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                email\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                password\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsEmail()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/Login.dto.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsString()@MinLength(6)@MaxLength(20)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/Login.dto.ts:13\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsEmail, IsNotEmpty, IsString, MaxLength, MinLength } from \"class-validator\";\n\nexport class LoginDTO {\n    @IsNotEmpty()\n    @IsEmail()\n    email: string;\n\n    @IsNotEmpty()\n    @IsString()\n    @MinLength(6)\n    @MaxLength(20)\n    password: string;\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PrismaModule.html":{"url":"modules/PrismaModule.html","title":"module - PrismaModule","body":"\n                   \n\n\n\n\n    Modules\n    PrismaModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_PrismaModule\n\n\n\ncluster_PrismaModule_providers\n\n\n\ncluster_PrismaModule_exports\n\n\n\n\nPrismaService \n\nPrismaService \n\n\n\nPrismaModule\n\nPrismaModule\n\nPrismaService  -->\n\nPrismaModule->PrismaService \n\n\n\n\n\nPrismaService\n\nPrismaService\n\nPrismaModule -->\n\nPrismaService->PrismaModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/prisma/prisma.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            PrismaService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            PrismaService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        /* eslint-disable prettier/prettier */\nimport { Module } from '@nestjs/common';\nimport { PrismaService } from './prisma.service';\n\n@Module({\n  providers: [PrismaService],\n  exports: [PrismaService],\n})\nexport class PrismaModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PrismaService.html":{"url":"injectables/PrismaService.html","title":"injectable - PrismaService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  PrismaService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/prisma/prisma.service.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        PrismaClient\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                enableShutdownHooks\n                            \n                            \n                                    Async\n                                onModuleInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        enableShutdownHooks\n                        \n                    \n                \n            \n            \n                \n                        \n                    enableShutdownHooks(app: INestApplication)\n                \n            \n\n\n                    \n                        \n                            Defined in src/prisma/prisma.service.ts:11\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                app\n                                            \n                                                        INestApplication\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        onModuleInit\n                        \n                    \n                \n            \n            \n                \n                        \n                    onModuleInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/prisma/prisma.service.ts:7\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { INestApplication, Injectable, OnModuleInit } from '@nestjs/common';\nimport { PrismaClient } from '@prisma/client';\n\n@Injectable()\nexport class PrismaService extends PrismaClient implements OnModuleInit {\n  async onModuleInit() {\n    await this.$connect();\n  }\n\n  async enableShutdownHooks(app: INestApplication) {\n    process.on('beforeExit', async () => {\n      await app.close();\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RegisterDTO.html":{"url":"classes/RegisterDTO.html","title":"class - RegisterDTO","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RegisterDTO\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/dto/Register.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                email\n                            \n                            \n                                    \n                                    \n                                name\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                password\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/Register.dto.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/Register.dto.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsString()@MinLength(6)@MaxLength(20)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/Register.dto.ts:17\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsNotEmpty, IsString, MaxLength, MinLength } from 'class-validator';\n\nexport class RegisterDTO {\n    @IsNotEmpty()\n    @IsString()\n    name: string;\n\n    @IsNotEmpty()\n    @IsString()\n    email: string;\n\n    @IsNotEmpty()\n    @IsString()\n    @MinLength(6)\n    @MaxLength(20)\n    password: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/School.html":{"url":"classes/School.html","title":"class - School","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  School\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/school/entities/school.entity.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class School {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/SchoolController.html":{"url":"controllers/SchoolController.html","title":"controller - SchoolController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  SchoolController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/school/school.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                school\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Async\n                                create\n                            \n                            \n                                    \n                                    Async\n                                findAll\n                            \n                            \n                                    \n                                    Async\n                                findOne\n                            \n                            \n                                    \n                                    Async\n                                remove\n                            \n                            \n                                    \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createSchoolDto: CreateSchoolDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()\n                \n            \n\n                    \n                        \n                            Defined in src/school/school.controller.ts:12\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createSchoolDto\n                                            \n                                                            CreateSchoolDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n                    \n                        \n                            Defined in src/school/school.controller.ts:17\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     unknown\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/school/school.controller.ts:22\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/school/school.controller.ts:32\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id: string, updateSchoolDto: UpdateSchoolDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/school/school.controller.ts:27\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateSchoolDto\n                                            \n                                                            UpdateSchoolDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        /* eslint-disable prettier/prettier */\nimport { Controller, Get, Post, Body, Patch, Param, Delete } from '@nestjs/common';\nimport { SchoolService } from './school.service';\nimport { CreateSchoolDto } from './dto/create-school.dto';\nimport { UpdateSchoolDto } from './dto/update-school.dto';\n\n@Controller('school')\nexport class SchoolController {\n  constructor(private readonly schoolService: SchoolService) { }\n\n  @Post()\n  async create(@Body() createSchoolDto: CreateSchoolDto) {\n    return this.schoolService.create(createSchoolDto);\n  }\n\n  @Get()\n  async findAll() {\n    return this.schoolService.findAll();\n  }\n\n  @Get(':id')\n  async findOne(@Param('id') id: string) {\n    return await this.schoolService.findOne(+id);\n  }\n\n  @Patch(':id')\n  async update(@Param('id') id: string, @Body() updateSchoolDto: UpdateSchoolDto) {\n    return await this.schoolService.update(+id, updateSchoolDto);\n  }\n\n  @Delete(':id')\n  async remove(@Param('id') id: string) {\n    return await this.schoolService.remove(+id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SchoolModule.html":{"url":"modules/SchoolModule.html","title":"module - SchoolModule","body":"\n                   \n\n\n\n\n    Modules\n    SchoolModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_SchoolModule\n\n\n\ncluster_SchoolModule_imports\n\n\n\ncluster_SchoolModule_providers\n\n\n\n\nPrismaModule\n\nPrismaModule\n\n\n\nSchoolModule\n\nSchoolModule\n\nSchoolModule -->\n\nPrismaModule->SchoolModule\n\n\n\n\n\nSchoolService\n\nSchoolService\n\nSchoolModule -->\n\nSchoolService->SchoolModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/school/school.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            SchoolService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            SchoolController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            PrismaModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        /* eslint-disable prettier/prettier */\nimport { Module } from '@nestjs/common';\nimport { SchoolService } from './school.service';\nimport { SchoolController } from './school.controller';\nimport { PrismaModule } from 'src/prisma/prisma.module';\n\n@Module({\n  imports: [PrismaModule],\n  controllers: [SchoolController],\n  providers: [SchoolService],\n})\nexport class SchoolModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SchoolService.html":{"url":"injectables/SchoolService.html","title":"injectable - SchoolService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  SchoolService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/school/school.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                remove\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(prisma: PrismaService)\n                    \n                \n                        \n                            \n                                Defined in src/school/school.service.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        prisma\n                                                  \n                                                        \n                                                                        PrismaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createSchoolDto: CreateSchoolDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/school/school.service.ts:11\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createSchoolDto\n                                            \n                                                            CreateSchoolDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll()\n                \n            \n\n\n                    \n                        \n                            Defined in src/school/school.service.ts:17\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     unknown\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/school/school.service.ts:21\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/school/school.service.ts:39\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id: number, updateSchoolDto: UpdateSchoolDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/school/school.service.ts:30\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateSchoolDto\n                                            \n                                                            UpdateSchoolDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { CreateSchoolDto } from './dto/create-school.dto';\nimport { UpdateSchoolDto } from './dto/update-school.dto';\nimport { PrismaService } from 'src/prisma/prisma.service';\n\n@Injectable()\nexport class SchoolService {\n  constructor(private prisma: PrismaService) { };\n\n  async create(createSchoolDto: CreateSchoolDto) {\n    return await this.prisma.schools.create({\n      data: createSchoolDto\n    })\n  }\n\n  async findAll() {\n    return await this.prisma.schools.findMany();\n  }\n\n  async findOne(id: number) {\n    return await this.prisma.schools.findFirst({\n      where: {\n        id: id\n      }\n    })\n\n  }\n\n  async update(id: number, updateSchoolDto: UpdateSchoolDto) {\n    return await this.prisma.schools.update({\n      data: updateSchoolDto,\n      where: {\n        id: id\n      }\n    })\n  }\n\n  async remove(id: number) {\n    return await this.prisma.schools.delete({\n      where: {\n        id: id\n      }\n    })\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Task.html":{"url":"interfaces/Task.html","title":"interface - Task","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Task\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/task/data/task.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            task_description\n                                        \n                                \n                                \n                                        \n                                            task_id\n                                        \n                                \n                                \n                                        \n                                            task_name\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        task_description\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        task_description:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        task_id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        task_id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        task_name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        task_name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Task {\n  task_id: number;\n  task_name: string;\n  task_description: string;\n}\n\nexport const tasks: Task[] = [\n  {\n    task_id: 1,\n    task_name: 'Task 1',\n    task_description: 'Task 1 description',\n  },\n  {\n    task_id: 2,\n    task_name: 'Task 2',\n    task_description: 'Task 2 description',\n  },\n  {\n    task_id: 3,\n    task_name: 'Task 3',\n    task_description: 'Task 3 description',\n  },\n];\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/TaskController.html":{"url":"controllers/TaskController.html","title":"controller - TaskController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  TaskController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/task/task.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                task\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    Async\n                                createTask\n                            \n                            \n                                    \n                                    \n                                    Async\n                                deleteTaskById\n                            \n                            \n                                    \n                                    \n                                    Async\n                                getAllTasks\n                            \n                            \n                                    \n                                    \n                                    Async\n                                getTaskById\n                            \n                            \n                                    \n                                    \n                                    \n                                    Async\n                                updateTaskById\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Async\n                        createTask\n                        \n                    \n                \n            \n            \n                \n                        \n                    createTask(body: CreateTaskDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(AuthGuard)@UsePipes(ValidationPipe)@Post()\n                \n            \n\n                    \n                        \n                            Defined in src/task/task.controller.ts:26\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                body\n                                            \n                                                            CreateTaskDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Async\n                        deleteTaskById\n                        \n                    \n                \n            \n            \n                \n                        \n                    deleteTaskById(task_id)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(AuthGuard)@Delete(':task_id')\n                \n            \n\n                    \n                        \n                            Defined in src/task/task.controller.ts:51\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                task_id\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Async\n                        getAllTasks\n                        \n                    \n                \n            \n            \n                \n                        \n                    getAllTasks()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(AuthGuard)@Get()\n                \n            \n\n                    \n                        \n                            Defined in src/task/task.controller.ts:32\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     unknown\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Async\n                        getTaskById\n                        \n                    \n                \n            \n            \n                \n                        \n                    getTaskById(task_id)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(AuthGuard)@Get(':task_id')\n                \n            \n\n                    \n                        \n                            Defined in src/task/task.controller.ts:38\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                task_id\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Async\n                        updateTaskById\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateTaskById(task_id, body: UpdateTaskDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(AuthGuard)@UsePipes(ValidationPipe)@Patch(':task_id')\n                \n            \n\n                    \n                        \n                            Defined in src/task/task.controller.ts:45\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                task_id\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                body\n                                            \n                                                            UpdateTaskDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        /* eslint-disable prettier/prettier */\nimport { \n    Body, \n    Controller, \n    Get, \n    Param, \n    Patch, \n    Post, \n    Delete, \n    UsePipes,\n    ValidationPipe,\n    UseGuards\n} from '@nestjs/common';\nimport { TaskService } from './task.service';\nimport { CreateTaskDto } from './dto/create-task.dto';\nimport { UpdateTaskDto } from './dto/update-task.dto';\nimport { AuthGuard } from 'src/auth/auth.guard';\n\n@Controller('task')\nexport class TaskController {\n    constructor(private taskService: TaskService) { }\n\n    @UseGuards(AuthGuard)\n    @UsePipes(ValidationPipe)\n    @Post()\n    async createTask(@Body() body: CreateTaskDto) {\n        return await this.taskService.createTask(body);\n    }\n\n    @UseGuards(AuthGuard)\n    @Get()\n    async getAllTasks() {\n        return await this.taskService.getAllTask();\n    }\n\n    @UseGuards(AuthGuard)\n    @Get(':task_id')\n    async getTaskById(@Param('task_id') task_id) {\n        return await this.taskService.getTaskById(+task_id);\n    }\n\n    @UseGuards(AuthGuard)\n    @UsePipes(ValidationPipe)\n    @Patch(':task_id')\n    async updateTaskById(@Param('task_id') task_id, @Body() body: UpdateTaskDto) {\n        return await this.taskService.updateTaskById(+task_id, body)\n    }\n\n    @UseGuards(AuthGuard)\n    @Delete(':task_id')\n    async deleteTaskById(@Param('task_id') task_id) {\n        return await this.taskService.deletTaskById(+task_id);\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TaskModule.html":{"url":"modules/TaskModule.html","title":"module - TaskModule","body":"\n                   \n\n\n\n\n    Modules\n    TaskModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_TaskModule\n\n\n\ncluster_TaskModule_imports\n\n\n\ncluster_TaskModule_providers\n\n\n\n\nPrismaModule\n\nPrismaModule\n\n\n\nTaskModule\n\nTaskModule\n\nTaskModule -->\n\nPrismaModule->TaskModule\n\n\n\n\n\nPrismaService\n\nPrismaService\n\nTaskModule -->\n\nPrismaService->TaskModule\n\n\n\n\n\nTaskService\n\nTaskService\n\nTaskModule -->\n\nTaskService->TaskModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/task/task.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            PrismaService\n                        \n                        \n                            TaskService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            TaskController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            PrismaModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { TaskController } from './task.controller';\nimport { TaskService } from './task.service';\nimport { PrismaModule } from 'src/prisma/prisma.module';\nimport { PrismaService } from 'src/prisma/prisma.service';\n\n@Module({\n  imports: [PrismaModule],\n  controllers: [TaskController],\n  providers: [TaskService, PrismaService],\n})\nexport class TaskModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TaskService.html":{"url":"injectables/TaskService.html","title":"injectable - TaskService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  TaskService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/task/task.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                createTask\n                            \n                            \n                                    Async\n                                deletTaskById\n                            \n                            \n                                    Async\n                                getAllTask\n                            \n                            \n                                    Async\n                                getTaskById\n                            \n                            \n                                    Async\n                                updateTaskById\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(prisma: PrismaService, req: any)\n                    \n                \n                        \n                            \n                                Defined in src/task/task.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        prisma\n                                                  \n                                                        \n                                                                        PrismaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        req\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        createTask\n                        \n                    \n                \n            \n            \n                \n                        \n                    createTask(data: CreateTaskDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/task/task.service.ts:15\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            CreateTaskDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        deletTaskById\n                        \n                    \n                \n            \n            \n                \n                        \n                    deletTaskById(task_id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/task/task.service.ts:66\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                task_id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getAllTask\n                        \n                    \n                \n            \n            \n                \n                        \n                    getAllTask()\n                \n            \n\n\n                    \n                        \n                            Defined in src/task/task.service.ts:26\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     unknown\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getTaskById\n                        \n                    \n                \n            \n            \n                \n                        \n                    getTaskById(task_id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/task/task.service.ts:38\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                task_id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        updateTaskById\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateTaskById(task_id: number, data: UpdateTaskDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/task/task.service.ts:52\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                task_id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                data\n                                            \n                                                            UpdateTaskDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, Inject } from '@nestjs/common';\nimport { CreateTaskDto } from './dto/create-task.dto';\nimport { UpdateTaskDto } from './dto/update-task.dto';\nimport { PrismaService } from 'src/prisma/prisma.service';\nimport { REQUEST } from '@nestjs/core';\n\n@Injectable()\nexport class TaskService {\n    constructor(\n        private prisma: PrismaService,\n        @Inject(REQUEST) private req: any,\n    ) { }\n\n    async createTask(data: CreateTaskDto) {\n        data.id_user = this.req.user.id;\n        const createData = await this.prisma.tasks.create({\n            data: data\n        })\n        return {\n            statusCode: 201,\n            data: createData\n        }\n    }\n\n    async getAllTask() {\n        const allData = await this.prisma.tasks.findMany({\n            where: {\n                id_user: this.req.user.id\n            }\n        });\n        return {\n            statusCode: 200,\n            data: allData\n        }\n    }\n\n    async getTaskById(task_id: number) {\n        const data = await this.prisma.tasks.findFirst({\n            where:\n            {\n                id: task_id,\n                id_user: this.req.user.id\n            }\n        })\n        return {\n            statusCode: 200,\n            data\n        }\n    }\n\n    async updateTaskById(task_id: number, data: UpdateTaskDto) {\n        data.id_user = this.req.user.id;\n        const updateData = await this.prisma.tasks.update({\n            data: data,\n            where: {\n                id: task_id\n            }\n        })\n        return {\n            statusCode: 200,\n            data: updateData\n        }\n    }\n\n    async deletTaskById(task_id: number) {\n        const deleteData = await this.prisma.tasks.delete({\n            where: {\n                id: task_id\n            }\n        })\n        return {\n            statusCode: 200,\n            data: deleteData,\n            message: \"Sucessfully deleted data\"\n        }\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateSchoolDto.html":{"url":"classes/UpdateSchoolDto.html","title":"class - UpdateSchoolDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateSchoolDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/school/dto/update-school.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        PartialType(CreateSchoolDto)\n            \n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/mapped-types';\nimport { CreateSchoolDto } from './create-school.dto';\n\nexport class UpdateSchoolDto extends PartialType(CreateSchoolDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateTaskDto.html":{"url":"classes/UpdateTaskDto.html","title":"class - UpdateTaskDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateTaskDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/task/dto/update-task.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                id_user\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                task_description\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                task_name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        id_user\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/task/dto/update-task.dto.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        task_description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/task/dto/update-task.dto.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        task_name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/task/dto/update-task.dto.ts:8\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsOptional, IsString } from 'class-validator';\n\n\nexport class UpdateTaskDto {\n    @IsOptional()\n    @IsString()\n    task_name?: string;\n\n    @IsString()\n    @IsOptional()\n    task_description?: string;\n\n    id_user: number;\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app.controller.ts\n            \n            controller\n            AppController\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app.service.ts\n            \n            injectable\n            AppService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/auth/auth.controller.ts\n            \n            controller\n            AuthController\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/auth/auth.guard.ts\n            \n            injectable\n            AuthGuard\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/auth/auth.service.ts\n            \n            injectable\n            AuthService\n            \n                71 %\n                (5/7)\n            \n        \n        \n            \n                \n                src/auth/dto/Login.dto.ts\n            \n            class\n            LoginDTO\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/auth/dto/Register.dto.ts\n            \n            class\n            RegisterDTO\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/auth/jwt.strategy.ts\n            \n            injectable\n            JwtStrategy\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/config/jwt_config.ts\n            \n            variable\n            jwt_config\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/prisma/prisma.service.ts\n            \n            injectable\n            PrismaService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/school/dto/create-school.dto.ts\n            \n            class\n            CreateSchoolDto\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/school/dto/update-school.dto.ts\n            \n            class\n            UpdateSchoolDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/school/entities/school.entity.ts\n            \n            class\n            School\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/school/school.controller.ts\n            \n            controller\n            SchoolController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/school/school.service.ts\n            \n            injectable\n            SchoolService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/task/data/task.ts\n            \n            interface\n            Task\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/task/data/task.ts\n            \n            variable\n            tasks\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/task/dto/create-task.dto.ts\n            \n            class\n            CreateTaskDto\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/task/dto/update-task.dto.ts\n            \n            class\n            UpdateTaskDto\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/task/task.controller.ts\n            \n            controller\n            TaskController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/task/task.service.ts\n            \n            injectable\n            TaskService\n            \n                0 %\n                (0/7)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @nestjs/common : ^10.0.0\n        \n            @nestjs/core : ^10.0.0\n        \n            @nestjs/jwt : ^10.2.0\n        \n            @nestjs/mapped-types : *\n        \n            @nestjs/passport : ^10.0.3\n        \n            @nestjs/platform-express : ^10.0.0\n        \n            @nestjs/serve-static : ^4.0.0\n        \n            @prisma/client : ^5.8.1\n        \n            bcrypt : ^5.1.1\n        \n            class-transformer : ^0.5.1\n        \n            class-validator : ^0.14.1\n        \n            passport : ^0.7.0\n        \n            passport-jwt : ^4.0.1\n        \n            reflect-metadata : ^0.1.13\n        \n            rxjs : ^7.8.1\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n  \n\n\n  A progressive Node.js framework for building efficient and scalable server-side applications.\n    \n\n\n\n\n\n\n\n\n  \n    \n  \n\n  \n\nDescription\nNest framework TypeScript starter repository.\nInstallation\nExample :$ yarn installRunning the app\nExample :# development\n$ yarn run start\n\n# watch mode\n$ yarn run start:dev\n\n# production mode\n$ yarn run start:prodTest\nExample :# unit tests\n$ yarn run test\n\n# e2e tests\n$ yarn run test:e2e\n\n# test coverage\n$ yarn run test:covSupport\nNest is an MIT-licensed open source project. It can grow thanks to the sponsors and support by the amazing backers. If you'd like to join them, please read more here.\nStay in touch\n\nAuthor - Kamil Myśliwiec\nWebsite - https://nestjs.com\nTwitter - @nestframework\n\nLicense\nNest is MIT licensed.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PrismaModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SchoolModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TaskModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_providers\n\n\n\ncluster_PrismaModule\n\n\n\ncluster_PrismaModule_exports\n\n\n\ncluster_PrismaModule_providers\n\n\n\ncluster_SchoolModule\n\n\n\ncluster_SchoolModule_providers\n\n\n\ncluster_TaskModule\n\n\n\ncluster_TaskModule_providers\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nPrismaModule\n\nPrismaModule\n\nAuthModule -->\n\nPrismaModule->AuthModule\n\n\n\n\n\nSchoolModule\n\nSchoolModule\n\nSchoolModule -->\n\nPrismaModule->SchoolModule\n\n\n\n\n\nTaskModule\n\nTaskModule\n\nTaskModule -->\n\nPrismaModule->TaskModule\n\n\n\nAppModule -->\n\nPrismaModule->AppModule\n\n\n\n\n\nPrismaService \n\nPrismaService \n\nPrismaService  -->\n\nPrismaModule->PrismaService \n\n\n\nAppModule -->\n\nSchoolModule->AppModule\n\n\n\nAppModule -->\n\nTaskModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\nAuthModule -->\n\nJwtStrategy->AuthModule\n\n\n\n\n\nPrismaService\n\nPrismaService\n\nPrismaModule -->\n\nPrismaService->PrismaModule\n\n\n\nTaskModule -->\n\nPrismaService->TaskModule\n\n\n\n\n\nSchoolService\n\nSchoolService\n\nSchoolModule -->\n\nSchoolService->SchoolModule\n\n\n\n\n\nTaskService\n\nTaskService\n\nTaskModule -->\n\nTaskService->TaskModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        5 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    4 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    7 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    7 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    1 Interface\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.1\n        \n            Description : \n        \n            License : UNLICENSED\n        \n            Author : \n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            jwt_config   (src/.../jwt_config.ts)\n                        \n                        \n                            tasks   (src/.../task.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/config/jwt_config.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        jwt_config\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n    secret: \"Arthur666\",\n    expired: 3600\n}\n                    \n                \n\n\n        \n    \n\n    src/task/data/task.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        tasks\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Task[]\n\n                    \n                \n                \n                    \n                        Default value : [\n  {\n    task_id: 1,\n    task_name: 'Task 1',\n    task_description: 'Task 1 description',\n  },\n  {\n    task_id: 2,\n    task_name: 'Task 2',\n    task_description: 'Task 2 description',\n  },\n  {\n    task_id: 3,\n    task_name: 'Task 3',\n    task_description: 'Task 3 description',\n  },\n]\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
